{
  "--config": "--- string      Location of client config files ",
  "-c|--context": "--- string     Name of the context to use to connect to the daemon ",
  "-D|--debug": "--- debug mode",
  "-H|--host": "--- list          Daemon socket to connect to",
  "-l|--log-level": "--- string   Set the logging level ",
  "--tls": "--- implied by --tlsverify",
  "--tlscacert": "--- string   Trust certs signed only by this CA ",
  "--tlscert": "--- string     Path to TLS certificate file ",
  "--tlskey": "--- string      Path to TLS key file ",
  "--tlsverify": "--- and verify the remote",
  "-v|--version": "--- version information and quit",
  "container": {
    "#desc": "Manage containers"
  },
  "context": {
    "-h|--help": "--- for context",
    "#desc": "Manage contexts"
  },
  "image": {
    "#desc": "Manage images"
  },
  "manifest": {
    "#desc": "Manage Docker image manifests and manifest lists"
  },
  "network": {
    "#desc": "Manage networks"
  },
  "node": {
    "#desc": "Manage Swarm nodes"
  },
  "plugin": {
    "#desc": "Manage plugins"
  },
  "scan": {
    "--accept-license": "--- using a third party scanning provider",
    "--dependency-tree": "--- dependency tree with scan results",
    "--exclude-base": "--- base image from vulnerability scanning ",
    "-f|--file": "--- string       Dockerfile associated with image, provides more detailed results",
    "--group-issues": "--- duplicated vulnerabilities and group them to a single one ",
    "--json": "--- results in JSON format",
    "--login": "--- to the scan provider using an optional token , or web base token if empty",
    "--reject-license": "--- using a third party scanning provider",
    "--severity": "--- string   Only report vulnerabilities of provided level or higher ",
    "--token": "--- string      Authentication token to login to the third party scanning provider",
    "--version": "--- version of the scan plugin",
    "#desc": "Docker Scan "
  },
  "secret": {
    "#desc": "Manage Docker secrets"
  },
  "service": {
    "#desc": "Manage services"
  },
  "stack": {
    "--orchestrator": "--- string   Orchestrator to use ",
    "#desc": "Manage Docker stacks"
  },
  "swarm": {
    "#desc": "Manage Swarm"
  },
  "system": {
    "#desc": "Manage Docker"
  },
  "trust": {
    "#desc": "Manage trust on Docker images"
  },
  "volume": {
    "#desc": "Manage volumes"
  },
  "build": {
    "--add-host": "--- list           Add a custom host-to-IP mapping ",
    "--build-arg": "--- list          Set build-time variables",
    "--cache-from": "--- strings      Images to consider as cache sources",
    "--disable-content-trust": "--- image verification ",
    "-f|--file": "--- string             Name of the Dockerfile ",
    "--iidfile": "--- string          Write the image ID to the file",
    "--isolation": "--- string        Container isolation technology",
    "--label": "--- list              Set metadata for an image",
    "--network": "--- string          Set the networking mode for the RUN instructions during build ",
    "--no-cache": "--- not use cache when building the image",
    "-o|--output": "--- stringArray      Output destination ",
    "--platform": "--- string         Set platform if server is multi-platform capable",
    "--progress": "--- string         Set type of progress output ",
    "--pull": "--- attempt to pull a newer version of the image",
    "-q|--quiet": "--- the build output and print image ID on success",
    "--secret": "--- stringArray      Secret file to expose to the build : id=mysecret,src=/local/secret",
    "--ssh": "--- stringArray         SSH agent socket or keys to expose to the build  (format: default|",
    "-t|--tag": "--- list                Name and optionally a tag in the 'name:tag' format",
    "--target": "--- string           Set the target build stage to build.",
    "#desc": "Build an image from a Dockerfile"
  },
  "commit": {
    "-a|--author": "--- string    Author ",
    "-c|--change": "--- list      Apply Dockerfile instruction to the created image",
    "-m|--message": "--- string   Commit message",
    "-p|--pause": "--- container during commit ",
    "#desc": "Create a new image from a container's changes"
  },
  "cp": {
    "-a|--archive": "--- mode ",
    "-L|--follow-link": "--- follow symbol link in SRC_PATH",
    "#desc": "Copy files/folders between a container and the local filesystem"
  },
  "create": {
    "--add-host": "--- list                  Add a custom host-to-IP mapping ",
    "-a|--attach": "--- list                    Attach to STDIN, STDOUT or STDERR",
    "--blkio-weight": "--- uint16            Block IO ",
    "--blkio-weight-device": "--- list       Block IO weight ",
    "--cap-add": "--- list                   Add Linux capabilities",
    "--cap-drop": "--- list                  Drop Linux capabilities",
    "--cgroup-parent": "--- string           Optional parent cgroup for the container",
    "--cgroupns": "--- string                Cgroup namespace to use ",
    "--cidfile": "--- string                 Write the container ID to the file",
    "--cpu-period": "--- int                 Limit CPU CFS  period",
    "--cpu-quota": "--- int                  Limit CPU CFS  quota",
    "--cpu-rt-period": "--- int              Limit CPU real-time period in microseconds",
    "--cpu-rt-runtime": "--- int             Limit CPU real-time runtime in microseconds",
    "-c|--cpu-shares": "--- int                 CPU shares ",
    "--cpus": "--- decimal                   Number of CPUs",
    "--cpuset-cpus": "--- string             CPUs in which to allow execution ",
    "--cpuset-mems": "--- string             MEMs in which to allow execution ",
    "--device": "--- list                    Add a host device to the container",
    "--device-cgroup-rule": "--- list        Add a rule to the cgroup allowed devices list",
    "--device-read-bps": "--- list           Limit read rate ",
    "--device-read-iops": "--- list          Limit read rate ",
    "--device-write-bps": "--- list          Limit write rate ",
    "--device-write-iops": "--- list         Limit write rate ",
    "--disable-content-trust": "--- image verification ",
    "--dns": "--- list                       Set custom DNS servers",
    "--dns-option": "--- list                Set DNS options",
    "--dns-search": "--- list                Set custom DNS search domains",
    "--domainname": "--- string              Container NIS domain name",
    "--entrypoint": "--- string              Overwrite the default ENTRYPOINT of the image",
    "-e|--env": "--- list                       Set environment variables",
    "--env-file": "--- list                  Read in a file of environment variables",
    "--expose": "--- list                    Expose a port or a range of ports",
    "--gpus": "--- gpu-request               GPU devices to add to the container ",
    "--group-add": "--- list                 Add additional groups to join",
    "--health-cmd": "--- string              Command to run to check health",
    "--health-interval": "--- duration       Time between running the check ",
    "--health-retries": "--- int             Consecutive failures needed to report unhealthy",
    "--health-start-period": "--- duration   Start period for the container to initialize before starting health-retries countdown ",
    "--health-timeout": "--- duration        Maximum time to allow one check to run ",
    "--help": "--- usage",
    "-h|--hostname": "--- string                Container host name",
    "--init": "--- an init inside the container that forwards signals and reaps processes",
    "-i|--interactive": "--- open even if not attached",
    "--ip": "--- string                      IPv4 address ",
    "--ip6": "--- string                     IPv6 address ",
    "--ipc": "--- string                     IPC mode to use",
    "--isolation": "--- string               Container isolation technology",
    "--kernel-memory": "--- bytes            Kernel memory limit",
    "-l|--label": "--- list                     Set meta data on a container",
    "--label-file": "--- list                Read in a line delimited file of labels",
    "--link": "--- list                      Add link to another container",
    "--link-local-ip": "--- list             Container IPv4/IPv6 link-local addresses",
    "--log-driver": "--- string              Logging driver for the container",
    "--log-opt": "--- list                   Log driver options",
    "--mac-address": "--- string             Container MAC address ",
    "-m|--memory": "--- bytes                   Memory limit",
    "--memory-reservation": "--- bytes       Memory soft limit",
    "--memory-swap": "--- bytes              Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
    "--memory-swappiness": "--- int          Tune container memory swappiness ",
    "--mount": "--- mount                    Attach a filesystem mount to the container",
    "--name": "--- string                    Assign a name to the container",
    "--network": "--- network                Connect a container to a network",
    "--network-alias": "--- list             Add network-scoped alias for the container",
    "--no-healthcheck": "--- any container-specified HEALTHCHECK",
    "--oom-kill-disable": "--- any container-specified HEALTHCHECK",
    "--oom-score-adj": "--- int              Tune host's OOM preferences ",
    "--pid": "--- string                     PID namespace to use",
    "--pids-limit": "--- int                 Tune container pids limit ",
    "--platform": "--- string                Set platform if server is multi-platform capable",
    "--privileged": "--- extended privileges to this container",
    "-p|--publish": "--- list                   Publish a container's port to the host",
    "-P|--publish-all": "--- all exposed ports to random ports",
    "--pull": "--- string                    Pull image before creating ",
    "--read-only": "--- the container's root filesystem as read only",
    "--restart": "--- string                 Restart policy to apply when a container exits ",
    "--rm": "--- remove the container when it exits",
    "--runtime": "--- string                 Runtime to use for this container",
    "--security-opt": "--- list              Security Options",
    "--shm-size": "--- bytes                 Size of /dev/shm",
    "--stop-signal": "--- string             Signal to stop a container ",
    "--stop-timeout": "--- int               Timeout  to stop a container",
    "--storage-opt": "--- list               Storage driver options for the container",
    "--sysctl": "--- map                     Sysctl options ",
    "--tmpfs": "--- list                     Mount a tmpfs directory",
    "-t|--tty": "--- a pseudo-TTY",
    "--ulimit": "--- ulimit                  Ulimit options ",
    "-u|--user": "--- string                    Username or UID ",
    "--userns": "--- string                  User namespace to use",
    "--uts": "--- string                     UTS namespace to use",
    "-v|--volume": "--- list                    Bind mount a volume",
    "--volume-driver": "--- string           Optional volume driver for the container",
    "--volumes-from": "--- list              Mount volumes from the specified container",
    "-w|--workdir": "--- string                 Working directory inside the container",
    "#desc": "Create a new container"
  },
  "diff": {
    "#desc": "Inspect changes to files or directories on a container's filesystem"
  },
  "events": {
    "-f|--filter": "--- filter   Filter output based on conditions provided",
    "--format": "--- string   Format the output using the given Go template",
    "--since": "--- string    Show all events created since timestamp",
    "--until": "--- string    Stream events until this timestamp",
    "#desc": "Get real time events from the server"
  },
  "exec": {
    "-d|--detach": "--- mode: run command in the background",
    "--detach-keys": "--- string   Override the key sequence for detaching a container",
    "-e|--env": "--- list             Set environment variables",
    "--env-file": "--- list        Read in a file of environment variables",
    "-i|--interactive": "--- open even if not attached",
    "--privileged": "--- extended privileges to the command",
    "-t|--tty": "--- a pseudo-TTY",
    "-u|--user": "--- string          Username or UID ",
    "-w|--workdir": "--- string       Working directory inside the container",
    "#desc": "Run a command in a running container"
  },
  "export": {
    "-o|--output": "--- string   Write to a file, instead of STDOUT",
    "#desc": "Export a container's filesystem as a tar archive"
  },
  "history": {
    "--format": "--- string   Pretty-print images using a Go template",
    "-H|--human": "--- sizes and dates in human readable format ",
    "--no-trunc": "--- truncate output",
    "-q|--quiet": "--- show image IDs",
    "#desc": "Show the history of an image"
  },
  "images": {
    "-a|--all": "--- all images ",
    "--digests": "--- digests",
    "-f|--filter": "--- filter   Filter output based on conditions provided",
    "--format": "--- string   Pretty-print images using a Go template",
    "--no-trunc": "--- truncate output",
    "-q|--quiet": "--- show image IDs",
    "#desc": "List images"
  },
  "import": {
    "-c|--change": "--- list       Apply Dockerfile instruction to the created image",
    "-m|--message": "--- string    Set commit message for imported image",
    "--platform": "--- string   Set platform if server is multi-platform capable",
    "#desc": "Import the contents from a tarball to create a filesystem image"
  },
  "info": {
    "-f|--format": "--- string   Format the output using the given Go template",
    "#desc": "Display system-wide information"
  },
  "inspect": {
    "-f|--format": "--- string   Format the output using the given Go template",
    "-s|--size": "--- total file sizes if the type is container",
    "--type": "--- string     Return JSON for specified type",
    "#desc": "Return low-level information on Docker objects"
  },
  "kill": {
    "-s|--signal": "--- string   Signal to send to the container ",
    "#desc": "Kill one or more running containers"
  },
  "load": {
    "-i|--input": "--- string   Read from tar archive file, instead of STDIN",
    "-q|--quiet": "--- the load output",
    "#desc": "Load an image from a tar archive or STDIN"
  },
  "login": {
    "-h|--help": "--- for login",
    "-p|--password": "--- string   password",
    "--password-stdin": "--- the password from stdin",
    "-u|--username": "--- string   username",
    "#desc": "Log in to a Docker registry"
  },
  "logout": {
    "-h|--help": "--- for logout",
    "#desc": "Log out from a Docker registry"
  },
  "logs": {
    "--details": "--- extra details provided to logs",
    "-f|--follow": "--- log output",
    "--since": "--- string   Show logs since timestamp ",
    "-n|--tail": "--- string    Number of lines to show from the end of the logs ",
    "-t|--timestamps": "--- timestamps",
    "--until": "--- string   Show logs before a timestamp ",
    "#desc": "Fetch the logs of a container"
  },
  "pause": {
    "#desc": "Pause all processes within one or more containers"
  },
  "port": {
    "#desc": "List port mappings or a specific mapping for the container"
  },
  "ps": {
    "-a|--all": "--- all containers ",
    "-f|--filter": "--- filter   Filter output based on conditions provided",
    "--format": "--- string   Pretty-print containers using a Go template",
    "-n|--last": "--- int        Show n last created containers ",
    "-l|--latest": "--- the latest created container ",
    "--no-trunc": "--- truncate output",
    "-q|--quiet": "--- display container IDs",
    "-s|--size": "--- total file sizes",
    "#desc": "List containers"
  },
  "pull": {
    "-a|--all-tags": "--- all tagged images in the repository",
    "--disable-content-trust": "--- image verification ",
    "--platform": "--- string         Set platform if server is multi-platform capable",
    "-q|--quiet": "--- verbose output",
    "#desc": "Pull an image or a repository from a registry"
  },
  "push": {
    "-a|--all-tags": "--- all tagged images in the repository",
    "--disable-content-trust": "--- image signing ",
    "-q|--quiet": "--- verbose output",
    "#desc": "Push an image or a repository to a registry"
  },
  "rename": {
    "#desc": "Rename a container"
  },
  "restart": {
    "-t|--time": "--- int   Seconds to wait for stop before killing the container ",
    "#desc": "Restart one or more containers"
  },
  "rm": {
    "-f|--force": "--- the removal of a running container ",
    "-l|--link": "--- the specified link",
    "-v|--volumes": "--- anonymous volumes associated with the container",
    "#desc": "Remove one or more containers"
  },
  "rmi": {
    "-f|--force": "--- removal of the image",
    "--no-prune": "--- not delete untagged parents",
    "#desc": "Remove one or more images"
  },
  "run": {
    "--add-host": "--- list                  Add a custom host-to-IP mapping ",
    "-a|--attach": "--- list                    Attach to STDIN, STDOUT or STDERR",
    "--blkio-weight": "--- uint16            Block IO ",
    "--blkio-weight-device": "--- list       Block IO weight ",
    "--cap-add": "--- list                   Add Linux capabilities",
    "--cap-drop": "--- list                  Drop Linux capabilities",
    "--cgroup-parent": "--- string           Optional parent cgroup for the container",
    "--cgroupns": "--- string                Cgroup namespace to use ",
    "--cidfile": "--- string                 Write the container ID to the file",
    "--cpu-period": "--- int                 Limit CPU CFS  period",
    "--cpu-quota": "--- int                  Limit CPU CFS  quota",
    "--cpu-rt-period": "--- int              Limit CPU real-time period in microseconds",
    "--cpu-rt-runtime": "--- int             Limit CPU real-time runtime in microseconds",
    "-c|--cpu-shares": "--- int                 CPU shares ",
    "--cpus": "--- decimal                   Number of CPUs",
    "--cpuset-cpus": "--- string             CPUs in which to allow execution ",
    "--cpuset-mems": "--- string             MEMs in which to allow execution ",
    "-d|--detach": "--- container in background and print container ID",
    "--detach-keys": "--- string             Override the key sequence for detaching a container",
    "--device": "--- list                    Add a host device to the container",
    "--device-cgroup-rule": "--- list        Add a rule to the cgroup allowed devices list",
    "--device-read-bps": "--- list           Limit read rate ",
    "--device-read-iops": "--- list          Limit read rate ",
    "--device-write-bps": "--- list          Limit write rate ",
    "--device-write-iops": "--- list         Limit write rate ",
    "--disable-content-trust": "--- image verification ",
    "--dns": "--- list                       Set custom DNS servers",
    "--dns-option": "--- list                Set DNS options",
    "--dns-search": "--- list                Set custom DNS search domains",
    "--domainname": "--- string              Container NIS domain name",
    "--entrypoint": "--- string              Overwrite the default ENTRYPOINT of the image",
    "-e|--env": "--- list                       Set environment variables",
    "--env-file": "--- list                  Read in a file of environment variables",
    "--expose": "--- list                    Expose a port or a range of ports",
    "--gpus": "--- gpu-request               GPU devices to add to the container ",
    "--group-add": "--- list                 Add additional groups to join",
    "--health-cmd": "--- string              Command to run to check health",
    "--health-interval": "--- duration       Time between running the check ",
    "--health-retries": "--- int             Consecutive failures needed to report unhealthy",
    "--health-start-period": "--- duration   Start period for the container to initialize before starting health-retries countdown ",
    "--health-timeout": "--- duration        Maximum time to allow one check to run ",
    "--help": "--- usage",
    "-h|--hostname": "--- string                Container host name",
    "--init": "--- an init inside the container that forwards signals and reaps processes",
    "-i|--interactive": "--- open even if not attached",
    "--ip": "--- string                      IPv4 address ",
    "--ip6": "--- string                     IPv6 address ",
    "--ipc": "--- string                     IPC mode to use",
    "--isolation": "--- string               Container isolation technology",
    "--kernel-memory": "--- bytes            Kernel memory limit",
    "-l|--label": "--- list                     Set meta data on a container",
    "--label-file": "--- list                Read in a line delimited file of labels",
    "--link": "--- list                      Add link to another container",
    "--link-local-ip": "--- list             Container IPv4/IPv6 link-local addresses",
    "--log-driver": "--- string              Logging driver for the container",
    "--log-opt": "--- list                   Log driver options",
    "--mac-address": "--- string             Container MAC address ",
    "-m|--memory": "--- bytes                   Memory limit",
    "--memory-reservation": "--- bytes       Memory soft limit",
    "--memory-swap": "--- bytes              Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
    "--memory-swappiness": "--- int          Tune container memory swappiness ",
    "--mount": "--- mount                    Attach a filesystem mount to the container",
    "--name": "--- string                    Assign a name to the container",
    "--network": "--- network                Connect a container to a network",
    "--network-alias": "--- list             Add network-scoped alias for the container",
    "--no-healthcheck": "--- any container-specified HEALTHCHECK",
    "--oom-kill-disable": "--- any container-specified HEALTHCHECK",
    "--oom-score-adj": "--- int              Tune host's OOM preferences ",
    "--pid": "--- string                     PID namespace to use",
    "--pids-limit": "--- int                 Tune container pids limit ",
    "--platform": "--- string                Set platform if server is multi-platform capable",
    "--privileged": "--- extended privileges to this container",
    "-p|--publish": "--- list                   Publish a container's port to the host",
    "-P|--publish-all": "--- all exposed ports to random ports",
    "--pull": "--- string                    Pull image before running ",
    "--read-only": "--- the container's root filesystem as read only",
    "--restart": "--- string                 Restart policy to apply when a container exits ",
    "--rm": "--- remove the container when it exits",
    "--runtime": "--- string                 Runtime to use for this container",
    "--security-opt": "--- list              Security Options",
    "--shm-size": "--- bytes                 Size of /dev/shm",
    "--sig-proxy": "--- received signals to the process ",
    "--stop-signal": "--- string             Signal to stop a container ",
    "--stop-timeout": "--- int               Timeout  to stop a container",
    "--storage-opt": "--- list               Storage driver options for the container",
    "--sysctl": "--- map                     Sysctl options ",
    "--tmpfs": "--- list                     Mount a tmpfs directory",
    "-t|--tty": "--- a pseudo-TTY",
    "--ulimit": "--- ulimit                  Ulimit options ",
    "-u|--user": "--- string                    Username or UID ",
    "--userns": "--- string                  User namespace to use",
    "--uts": "--- string                     UTS namespace to use",
    "-v|--volume": "--- list                    Bind mount a volume",
    "--volume-driver": "--- string           Optional volume driver for the container",
    "--volumes-from": "--- list              Mount volumes from the specified container",
    "-w|--workdir": "--- string                 Working directory inside the container",
    "#desc": "Run a command in a new container"
  },
  "save": {
    "-o|--output": "--- string   Write to a file, instead of STDOUT",
    "#desc": "Save one or more images to a tar archive "
  },
  "search": {
    "-f|--filter": "--- filter   Filter output based on conditions provided",
    "--format": "--- string   Pretty-print search using a Go template",
    "--limit": "--- int       Max number of search results ",
    "--no-trunc": "--- truncate output",
    "#desc": "Search the Docker Hub for images"
  },
  "start": {
    "-a|--attach": "--- and forward signals",
    "--detach-keys": "--- string   Override the key sequence for detaching a container",
    "-i|--interactive": "--- container's STDIN",
    "#desc": "Start one or more stopped containers"
  },
  "stats": {
    "-a|--all": "--- all containers ",
    "--format": "--- string   Pretty-print images using a Go template",
    "--no-stream": "--- streaming stats and only pull the first result",
    "--no-trunc": "--- not truncate output",
    "#desc": "Display a live stream of container resource usage statistics"
  },
  "stop": {
    "-t|--time": "--- int   Seconds to wait for stop before killing it ",
    "#desc": "Stop one or more running containers"
  },
  "tag": {
    "#desc": "Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE"
  },
  "top": {
    "#desc": "Display the running processes of a container"
  },
  "unpause": {
    "#desc": "Unpause all processes within one or more containers"
  },
  "update": {
    "--blkio-weight": "--- uint16        Block IO ",
    "--cpu-period": "--- int             Limit CPU CFS  period",
    "--cpu-quota": "--- int              Limit CPU CFS  quota",
    "--cpu-rt-period": "--- int          Limit the CPU real-time period in microseconds",
    "--cpu-rt-runtime": "--- int         Limit the CPU real-time runtime in microseconds",
    "-c|--cpu-shares": "--- int             CPU shares ",
    "--cpus": "--- decimal               Number of CPUs",
    "--cpuset-cpus": "--- string         CPUs in which to allow execution ",
    "--cpuset-mems": "--- string         MEMs in which to allow execution ",
    "--kernel-memory": "--- bytes        Kernel memory limit",
    "-m|--memory": "--- bytes               Memory limit",
    "--memory-reservation": "--- bytes   Memory soft limit",
    "--memory-swap": "--- bytes          Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
    "--pids-limit": "--- int             Tune container pids limit ",
    "--restart": "--- string             Restart policy to apply when a container exits",
    "#desc": "Update configuration of one or more containers"
  },
  "version": {
    "-f|--format": "--- string       Format the output. Values: . ",
    "-h|--help": "--- for version",
    "--kubeconfig": "--- string   Kubernetes config file",
    "#desc": "Show the Docker version information"
  },
  "wait": {
    "#desc": "Block until one or more containers stop, then print their exit codes"
  }
}