{
  "--config": "--- Location of client config files ",
  "-c|--context": "--- Name of the context to use to connect to the daemon ",
  "-D|--debug": "--- Enable debug mode",
  "-H|--host": "--- Daemon socket to connect to",
  "-l|--log-level": "--- Set the logging level ",
  "--tls": "--- Use TLS; implied by --tlsverify",
  "--tlscacert": "--- Trust certs signed only by this CA ",
  "--tlscert": "--- Path to TLS certificate file ",
  "--tlskey": "--- Path to TLS key file ",
  "--tlsverify": "--- Use TLS and verify the remote",
  "-v|--version": "--- Print version information and quit",
  "builder": {
    "build": {
      "--add-host": "--- Add a custom host-to-IP mapping ",
      "--build-arg": "--- Set build-time variables",
      "--cache-from": "--- Images to consider as cache sources",
      "--disable-content-trust": "--- Skip image verification ",
      "-f|--file": "--- Name of the Dockerfile ",
      "--iidfile": "--- Write the image ID to the file",
      "--isolation": "--- Container isolation technology",
      "--label": "--- Set metadata for an image",
      "--network": "--- Set the networking mode for the RUN instructions during build ",
      "--no-cache": "--- Do not use cache when building the image",
      "-o|--output": "--- Output destination ",
      "--platform": "--- Set platform if server is multi-platform capable",
      "--progress": "--- Set type of progress output ",
      "--pull": "--- Always attempt to pull a newer version of the image",
      "-q|--quiet": "--- Suppress the build output and print image ID on success",
      "--secret": "--- Secret file to expose to the build : id=mysecret,src=/local/secret",
      "--ssh": "--- SSH agent socket or keys to expose to the build  (format: default|",
      "-t|--tag": "--- Name and optionally a tag in the 'name:tag' format",
      "--target": "--- Set the target build stage to build.",
      "#desc": "Build an image from a Dockerfile"
    },
    "prune": {
      "-a|--all": "--- Remove all unused build cache, not just dangling ones",
      "--filter": "--- Provide filter values ",
      "-f|--force": "--- Do not prompt for confirmation",
      "--keep-storage": "--- Amount of disk space to keep for cache",
      "#desc": "Remove build cache"
    },
    "#desc": "Manage builds"
  },
  "buildx": {
    "--builder": "--- Override the configured builder instance",
    "imagetools": {
      "--builder": "--- Override the configured builder instance",
      "create": {
        "--append": "--- Append to existing manifest",
        "--builder": "--- Override the configured builder instance",
        "--dry-run": "--- Show final image instead of pushing",
        "-f|--file": "--- Read source descriptor from file",
        "-t|--tag": "--- Set reference for new image",
        "#desc": "Create a new image based on source images"
      },
      "inspect": {
        "--builder": "--- Override the configured builder instance",
        "--raw": "--- Show original JSON manifest",
        "#desc": "Show details of image in the registry"
      },
      "#desc": "Commands to work on images in registry"
    },
    "bake": {
      "--builder": "--- Override the configured builder instance",
      "-f|--file": "--- Build definition file",
      "--load--set=*.output=type=docker": "--- Shorthand for --set=*.output=type=docker",
      "--metadata-file": "--- Write build result metadata to the file",
      "--no-cache": "--- Do not use cache when building the image",
      "--print": "--- Print the options without building",
      "--progress": "--- Set type of progress output ",
      "--pull": "--- Always attempt to pull a newer version of the image",
      "--push--set=*.output=type=registry": "--- Shorthand for --set=*.output=type=registry",
      "--set": "--- Override target value ",
      "#desc": "Build from a file"
    },
    "build": {
      "--add-host": "--- Add a custom host-to-IP mapping ",
      "--allow": "--- Allow extra privileged entitlement ",
      "--build-arg": "--- Set build-time variables",
      "--builder": "--- Override the configured builder instance",
      "--cache-from": "--- External cache sources ",
      "--cache-to": "--- Cache export destinations ",
      "--cgroup-parent": "--- Optional parent cgroup for the container",
      "-f|--file": "--- PATH/Dockerfile                        Name of the Dockerfile ",
      "--iidfile": "--- Write the image ID to the file",
      "--label": "--- Set metadata for an image",
      "--load--output=type=docker": "--- Shorthand for --output=type=docker",
      "--metadata-file": "--- Write build result metadata to the file",
      "--network": "--- Set the networking mode for the RUN instructions during build ",
      "--no-cache": "--- Do not use cache when building the image",
      "-o|--output": "--- Output destination ",
      "--platform": "--- Set target platform for build",
      "--progress": "--- Set type of progress output ",
      "--pull": "--- Always attempt to pull a newer version of the image",
      "--push--output=type=registry": "--- Shorthand for --output=type=registry",
      "-q|--quiet": "--- Suppress the build output and print image ID on success",
      "--secret": "--- Secret file to expose to the build ",
      "--shm-size": "--- Size of /dev/shm",
      "--ssh": "--- Size of /dev/shm",
      "-t|--tag": "--- Name and optionally a tag ",
      "--target": "--- Set the target build stage to build.",
      "--ulimit": "--- Ulimit options ",
      "#desc": "Start a build"
    },
    "create": {
      "--append": "--- Append a node to builder instead of changing it",
      "--bootstrap": "--- Boot builder after creation",
      "--buildkitd-flags": "--- Flags for buildkitd daemon",
      "--config": "--- BuildKit config file",
      "--driver": "--- Driver to use ",
      "--driver-opt": "--- Options for the driver",
      "--leave": "--- Remove a node from builder instead of changing it",
      "--name": "--- Builder instance name",
      "--node": "--- Create/modify node with given name",
      "--platform": "--- Fixed platforms for current node",
      "--use": "--- Set the current builder instance",
      "#desc": "Create a new builder instance"
    },
    "du": {
      "--builder": "--- Override the configured builder instance",
      "--filter": "--- Provide filter values",
      "--verbose": "--- Provide a more verbose output",
      "#desc": "Disk usage"
    },
    "inspect": {
      "--bootstrap": "--- Ensure builder has booted before inspecting",
      "--builder": "--- Override the configured builder instance",
      "#desc": "Inspect current builder instance"
    },
    "ls": {
      "#desc": "List builder instances"
    },
    "prune": {
      "-a|--all": "--- Remove all unused images, not just dangling ones",
      "--builder": "--- Override the configured builder instance",
      "--filter": "--- Provide filter values ",
      "-f|--force": "--- Do not prompt for confirmation",
      "--keep-storage": "--- Amount of disk space to keep for cache",
      "--verbose": "--- Provide a more verbose output",
      "#desc": "Remove build cache"
    },
    "rm": {
      "--builder": "--- Override the configured builder instance",
      "--keep-state": "--- Keep BuildKit state",
      "#desc": "Remove a builder instance"
    },
    "stop": {
      "--builder": "--- Override the configured builder instance",
      "#desc": "Stop builder instance"
    },
    "use": {
      "--builder": "--- Override the configured builder instance",
      "--default": "--- Set builder as default for current context",
      "--global": "--- Builder persists context changes",
      "#desc": "Set the current builder instance"
    },
    "version": {
      "#desc": "Show buildx version information"
    },
    "#desc": "Docker Buildx "
  },
  "compose": {
    "--ansi": "--- Control when to print ANSI control characters ",
    "--compatibility": "--- Run compose in backward compatibility mode",
    "--env-file": "--- Specify an alternate environment file.",
    "-f|--file": "--- Compose configuration files",
    "--profile": "--- Specify a profile to enable",
    "--project-directory": "--- Specify an alternate working directory",
    "-p|--project-name": "--- Project name",
    "build": {
      "--build-arg": "--- Set build-time variables for services.",
      "--no-cache": "--- Do not use cache when building the image",
      "--progress": "--- Set type of progress output ",
      "--pull": "--- Always attempt to pull a newer version of the image.",
      "-q|--quiet": "--- Don't print anything to STDOUT",
      "#desc": "Build or rebuild services"
    },
    "convert": {
      "--format": "--- Format the output. Values: [yaml | json] ",
      "--hash": "--- Print the service config hash, one per line.",
      "--images": "--- Print the image names, one per line.",
      "--no-interpolate": "--- Don't interpolate environment variables.",
      "--no-normalize": "--- Don't normalize compose model.",
      "-o|--output": "--- Save to file ",
      "--profiles": "--- Print the profile names, one per line.",
      "-q|--quiet": "--- Only validate the configuration, don't print anything.",
      "--resolve-image-digests": "--- Pin image tags to digests.",
      "--services": "--- Print the service names, one per line.",
      "--volumes": "--- Print the volume names, one per line.",
      "#desc": "Converts the compose file to platform's canonical format"
    },
    "cp": {
      "--all": "--- Copy to all the containers of the service.",
      "-a|--archive": "--- Archive mode ",
      "-L|--follow-link": "--- Always follow symbol link in SRC_PATH",
      "--index": "--- Index of the container if there are multiple instances of a service [default: 1]. ",
      "#desc": "Copy files/folders between a service container and the local filesystem"
    },
    "create": {
      "--build": "--- Build images before starting containers.",
      "--force-recreate": "--- Recreate containers even if their configuration and image haven't changed.",
      "--no-build": "--- Don't build an image, even if it's missing.",
      "--no-recreate": "--- If containers already exist, don't recreate them. Incompatible with --force-recreate.",
      "#desc": "Creates containers for a service."
    },
    "down": {
      "--remove-orphans": "--- Remove containers for services not defined in the Compose file.",
      "--rmi": "--- Remove images used by services. local remove only images that don't have a custom tag ",
      "-t|--timeout": "--- Specify a shutdown timeout in seconds ",
      "-v|--volumes": "--- Remove named volumes declared in the volumes section of the Compose file and anonymous volumes attached to containers.",
      "#desc": "Stop and remove containers, networks"
    },
    "events": {
      "--json": "--- Output events as a stream of json objects",
      "#desc": "Receive real time events from containers."
    },
    "exec": {
      "-d|--detach": "--- Detached mode: Run command in the background.",
      "-e|--env": "--- Set environment variables",
      "--index": "--- Set environment variables",
      "-T|--no-TTY": "--- Disable pseudo-TTY allocation. By default docker compose exec allocates a TTY. ",
      "--privileged": "--- Give extended privileges to the process.",
      "-u|--user": "--- Run the command as this user.",
      "-w|--workdir": "--- Path to workdir directory for this command.",
      "#desc": "Execute a command in a running container."
    },
    "images": {
      "-q|--quiet": "--- Only display IDs",
      "#desc": "List images used by the created containers"
    },
    "kill": {
      "-s|--signal": "--- SIGNAL to send to the container. ",
      "#desc": "Force stop service containers."
    },
    "logs": {
      "-f|--follow": "--- Follow log output.",
      "--no-color": "--- Produce monochrome output.",
      "--no-log-prefix": "--- Don't print prefix in logs.",
      "--since": "--- Show logs since timestamp ",
      "--tail": "--- Number of lines to show from the end of the logs for each container. ",
      "-t|--timestamps": "--- Show timestamps.",
      "--until": "--- Show logs before a timestamp ",
      "#desc": "View output from containers"
    },
    "ls": {
      "-a|--all": "--- Show all stopped Compose projects",
      "--filter": "--- Filter output based on conditions provided.",
      "--format": "--- Format the output. Values: [pretty | json]. ",
      "-q|--quiet": "--- Only display IDs.",
      "#desc": "List running compose projects"
    },
    "pause": {
      "#desc": "Pause services"
    },
    "port": {
      "--index": "",
      "--protocol": "",
      "#desc": "Print the public port for a port binding."
    },
    "ps": {
      "-a|--all": "--- Show all stopped containers ",
      "--format": "--- Format the output. Values: [pretty | json] ",
      "-q|--quiet": "--- Only display IDs",
      "--services": "--- Display services",
      "--status": "--- Filter services by status. Values: [paused | restarting | removing | running | dead | created | exited]",
      "#desc": "List containers"
    },
    "pull": {
      "--ignore-pull-failures": "--- Pull what it can and ignores images with pull failures",
      "--include-deps": "--- Also pull services declared as dependencies",
      "-q|--quiet": "--- Pull without printing progress information",
      "#desc": "Pull service images"
    },
    "push": {
      "--ignore-push-failures": "--- Push what it can and ignores images with push failures",
      "#desc": "Push service images"
    },
    "restart": {
      "-t|--timeout": "--- Specify a shutdown timeout in seconds ",
      "#desc": "Restart containers"
    },
    "rm": {
      "-f|--force": "--- Don't ask to confirm removal",
      "-s|--stop": "--- Stop the containers, if required, before removing",
      "-v|--volumes": "--- Remove any anonymous volumes attached to containers",
      "#desc": "Removes stopped service containers"
    },
    "run": {
      "-d|--detach": "--- Run container in background and print container ID",
      "--entrypoint": "--- Override the entrypoint of the image",
      "-e|--env": "--- Set environment variables",
      "-l|--label": "--- Add or override a label",
      "--name": "--- Assign a name to the container",
      "-T|--no-TTY": "--- Disable pseudo-noTty allocation. By default docker compose run allocates a TTY ",
      "--no-deps": "--- Don't start linked services.",
      "-p|--publish": "--- Publish a container's port to the host.",
      "--quiet-pull": "--- Pull without printing progress information.",
      "--rm": "--- Automatically remove the container when it exits",
      "--service-ports": "--- Run command with the service's ports enabled and mapped to the host.",
      "--use-aliases": "--- Use the service's network useAliases in the network the container connects to.",
      "-u|--user": "--- Run as specified username or uid",
      "-v|--volume": "--- Bind mount a volume.",
      "-w|--workdir": "--- Working directory inside the container",
      "#desc": "Run a one-off command on a service."
    },
    "start": {
      "#desc": "Start services"
    },
    "stop": {
      "-t|--timeout": "--- Specify a shutdown timeout in seconds ",
      "#desc": "Stop services"
    },
    "top": {
      "#desc": "Display the running processes"
    },
    "unpause": {
      "#desc": "Unpause services"
    },
    "up": {
      "--abort-on-container-exit": "--- Stops all containers if any container was stopped. Incompatible with -d",
      "--always-recreate-deps": "--- Recreate dependent containers. Incompatible with --no-recreate.",
      "--attach": "--- Attach to service output.",
      "--attach-dependencies": "--- Attach to dependent containers.",
      "--build": "--- Build images before starting containers.",
      "-d|--detach": "--- Detached mode: Run containers in the background",
      "--exit-code-from": "--- Return the exit code of the selected service container. Implies --abort-on-container-exit",
      "--force-recreate": "--- Recreate containers even if their configuration and image haven't changed.",
      "--no-build": "--- Don't build an image, even if it's missing.",
      "--no-color": "--- Produce monochrome output.",
      "--no-deps": "--- Don't start linked services.",
      "--no-log-prefix": "--- Don't print prefix in logs.",
      "--no-recreate": "--- If containers already exist, don't recreate them. Incompatible with --force-recreate.",
      "--no-start": "--- Don't start the services after creating them.",
      "--quiet-pull": "--- Pull without printing progress information.",
      "--remove-orphans": "--- Remove containers for services not defined in the Compose file.",
      "-V|--renew-anon-volumes": "--- Recreate anonymous volumes instead of retrieving data from the previous containers.",
      "--scale": "--- Scale SERVICE to NUM instances. Overrides the scale setting in the Compose file if present.",
      "-t|--timeout": "--- Use this timeout in seconds for container shutdown when attached or when containers are already running. ",
      "--wait": "--- Wait for services to be running|healthy. Implies detached mode.",
      "#desc": "Create and start containers"
    },
    "version": {
      "-f|--format": "--- Format the output. Values: [pretty | json]. ",
      "--short": "--- Shows only Compose's version number.",
      "#desc": "Show the Docker Compose version information"
    },
    "#desc": "Docker Compose "
  },
  "config": {
    "create": {
      "-l|--label": "--- Config labels",
      "--template-driver": "--- Template driver",
      "#desc": "Create a config from a file or STDIN"
    },
    "inspect": {
      "-f|--format": "--- Format the output using the given Go template",
      "--pretty": "--- Print the information in a human friendly format",
      "#desc": "Display detailed information on one or more configs"
    },
    "ls": {
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Pretty-print configs using a Go template",
      "-q|--quiet": "--- Only display IDs",
      "#desc": "List configs"
    },
    "rm": {
      "#desc": "Remove one or more configs"
    },
    "#desc": "Manage Docker configs"
  },
  "container": {
    "attach": {
      "--detach-keys": "--- Override the key sequence for detaching a container",
      "--no-stdin": "--- Do not attach STDIN",
      "--sig-proxy": "--- Proxy all received signals to the process ",
      "#desc": "Attach local standard input, output, and error streams to a running container"
    },
    "commit": {
      "-a|--author": "--- Author ",
      "-c|--change": "--- Apply Dockerfile instruction to the created image",
      "-m|--message": "--- Commit message",
      "-p|--pause": "--- Pause container during commit ",
      "#desc": "Create a new image from a container's changes"
    },
    "cp": {
      "-a|--archive": "--- Archive mode ",
      "-L|--follow-link": "--- Always follow symbol link in SRC_PATH",
      "#desc": "Copy files/folders between a container and the local filesystem"
    },
    "create": {
      "--add-host": "--- Add a custom host-to-IP mapping ",
      "-a|--attach": "--- Attach to STDIN, STDOUT or STDERR",
      "--blkio-weight": "--- Block IO ",
      "--blkio-weight-device": "--- Block IO weight ",
      "--cap-add": "--- Add Linux capabilities",
      "--cap-drop": "--- Drop Linux capabilities",
      "--cgroup-parent": "--- Optional parent cgroup for the container",
      "--cgroupns": "--- Cgroup namespace to use ",
      "--cidfile": "--- Write the container ID to the file",
      "--cpu-period": "--- Limit CPU CFS  period",
      "--cpu-quota": "--- Limit CPU CFS  quota",
      "--cpu-rt-period": "--- Limit CPU real-time period in microseconds",
      "--cpu-rt-runtime": "--- Limit CPU real-time runtime in microseconds",
      "-c|--cpu-shares": "--- CPU shares ",
      "--cpus": "--- Number of CPUs",
      "--cpuset-cpus": "--- CPUs in which to allow execution ",
      "--cpuset-mems": "--- MEMs in which to allow execution ",
      "--device": "--- Add a host device to the container",
      "--device-cgroup-rule": "--- Add a rule to the cgroup allowed devices list",
      "--device-read-bps": "--- Limit read rate ",
      "--device-read-iops": "--- Limit read rate ",
      "--device-write-bps": "--- Limit write rate ",
      "--device-write-iops": "--- Limit write rate ",
      "--disable-content-trust": "--- Skip image verification ",
      "--dns": "--- Set custom DNS servers",
      "--dns-option": "--- Set DNS options",
      "--dns-search": "--- Set custom DNS search domains",
      "--domainname": "--- Container NIS domain name",
      "--entrypoint": "--- Overwrite the default ENTRYPOINT of the image",
      "-e|--env": "--- Set environment variables",
      "--env-file": "--- Read in a file of environment variables",
      "--expose": "--- Expose a port or a range of ports",
      "--gpus": "--- GPU devices to add to the container ",
      "--group-add": "--- Add additional groups to join",
      "--health-cmd": "--- Command to run to check health",
      "--health-interval": "--- Time between running the check ",
      "--health-retries": "--- Consecutive failures needed to report unhealthy",
      "--health-start-period": "--- Start period for the container to initialize before starting health-retries countdown ",
      "--health-timeout": "--- Maximum time to allow one check to run ",
      "--help": "--- Print usage",
      "-h|--hostname": "--- Container host name",
      "--init": "--- Run an init inside the container that forwards signals and reaps processes",
      "-i|--interactive": "--- Keep STDIN open even if not attached",
      "--ip": "--- IPv4 address ",
      "--ip6": "--- IPv6 address ",
      "--ipc": "--- IPC mode to use",
      "--isolation": "--- Container isolation technology",
      "--kernel-memory": "--- Kernel memory limit",
      "-l|--label": "--- Set meta data on a container",
      "--label-file": "--- Read in a line delimited file of labels",
      "--link": "--- Add link to another container",
      "--link-local-ip": "--- Container IPv4/IPv6 link-local addresses",
      "--log-driver": "--- Logging driver for the container",
      "--log-opt": "--- Log driver options",
      "--mac-address": "--- Container MAC address ",
      "-m|--memory": "--- Memory limit",
      "--memory-reservation": "--- Memory soft limit",
      "--memory-swap": "--- Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
      "--memory-swappiness": "--- Tune container memory swappiness ",
      "--mount": "--- Attach a filesystem mount to the container",
      "--name": "--- Assign a name to the container",
      "--network": "--- Connect a container to a network",
      "--network-alias": "--- Add network-scoped alias for the container",
      "--no-healthcheck": "--- Disable any container-specified HEALTHCHECK",
      "--oom-kill-disable": "--- Disable OOM Killer",
      "--oom-score-adj": "--- Tune host's OOM preferences ",
      "--pid": "--- PID namespace to use",
      "--pids-limit": "--- Tune container pids limit ",
      "--platform": "--- Set platform if server is multi-platform capable",
      "--privileged": "--- Give extended privileges to this container",
      "-p|--publish": "--- Publish a container's port to the host",
      "-P|--publish-all": "--- Publish all exposed ports to random ports",
      "--pull": "--- Pull image before creating ",
      "--read-only": "--- Mount the container's root filesystem as read only",
      "--restart": "--- Restart policy to apply when a container exits ",
      "--rm": "--- Automatically remove the container when it exits",
      "--runtime": "--- Runtime to use for this container",
      "--security-opt": "--- Security Options",
      "--shm-size": "--- Size of /dev/shm",
      "--stop-signal": "--- Signal to stop a container ",
      "--stop-timeout": "--- Timeout  to stop a container",
      "--storage-opt": "--- Storage driver options for the container",
      "--sysctl": "--- Sysctl options ",
      "--tmpfs": "--- Mount a tmpfs directory",
      "-t|--tty": "--- Allocate a pseudo-TTY",
      "--ulimit": "--- Ulimit options ",
      "-u|--user": "--- Username or UID ",
      "--userns": "--- User namespace to use",
      "--uts": "--- UTS namespace to use",
      "-v|--volume": "--- Bind mount a volume",
      "--volume-driver": "--- Optional volume driver for the container",
      "--volumes-from": "--- Mount volumes from the specified container",
      "-w|--workdir": "--- Working directory inside the container",
      "#desc": "Create a new container"
    },
    "diff": {
      "#desc": "Inspect changes to files or directories on a container's filesystem"
    },
    "exec": {
      "-d|--detach": "--- Detached mode: run command in the background",
      "--detach-keys": "--- Override the key sequence for detaching a container",
      "-e|--env": "--- Set environment variables",
      "--env-file": "--- Read in a file of environment variables",
      "-i|--interactive": "--- Keep STDIN open even if not attached",
      "--privileged": "--- Give extended privileges to the command",
      "-t|--tty": "--- Allocate a pseudo-TTY",
      "-u|--user": "--- Username or UID ",
      "-w|--workdir": "--- Working directory inside the container",
      "#desc": "Run a command in a running container"
    },
    "export": {
      "-o|--output": "--- Write to a file, instead of STDOUT",
      "#desc": "Export a container's filesystem as a tar archive"
    },
    "inspect": {
      "-f|--format": "--- Format the output using the given Go template",
      "-s|--size": "--- Display total file sizes",
      "#desc": "Display detailed information on one or more containers"
    },
    "kill": {
      "-s|--signal": "--- Signal to send to the container ",
      "#desc": "Kill one or more running containers"
    },
    "logs": {
      "--details": "--- Show extra details provided to logs",
      "-f|--follow": "--- Follow log output",
      "--since": "--- Show logs since timestamp ",
      "-n|--tail": "--- Number of lines to show from the end of the logs ",
      "-t|--timestamps": "--- Show timestamps",
      "--until": "--- Show logs before a timestamp ",
      "#desc": "Fetch the logs of a container"
    },
    "ls": {
      "-a|--all": "--- Show all containers ",
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Pretty-print containers using a Go template",
      "-n|--last": "--- Show n last created containers ",
      "-l|--latest": "--- Show the latest created container ",
      "--no-trunc": "--- Don't truncate output",
      "-q|--quiet": "--- Only display container IDs",
      "-s|--size": "--- Display total file sizes",
      "#desc": "List containers"
    },
    "pause": {
      "#desc": "Pause all processes within one or more containers"
    },
    "port": {
      "#desc": "List port mappings or a specific mapping for the container"
    },
    "prune": {
      "--filter": "--- Provide filter values ",
      "-f|--force": "--- Do not prompt for confirmation",
      "#desc": "Remove all stopped containers"
    },
    "rename": {
      "#desc": "Rename a container"
    },
    "restart": {
      "-t|--time": "--- Seconds to wait for stop before killing the container ",
      "#desc": "Restart one or more containers"
    },
    "rm": {
      "-f|--force": "--- Force the removal of a running container ",
      "-l|--link": "--- Remove the specified link",
      "-v|--volumes": "--- Remove anonymous volumes associated with the container",
      "#desc": "Remove one or more containers"
    },
    "run": {
      "--add-host": "--- Add a custom host-to-IP mapping ",
      "-a|--attach": "--- Attach to STDIN, STDOUT or STDERR",
      "--blkio-weight": "--- Block IO ",
      "--blkio-weight-device": "--- Block IO weight ",
      "--cap-add": "--- Add Linux capabilities",
      "--cap-drop": "--- Drop Linux capabilities",
      "--cgroup-parent": "--- Optional parent cgroup for the container",
      "--cgroupns": "--- Cgroup namespace to use ",
      "--cidfile": "--- Write the container ID to the file",
      "--cpu-period": "--- Limit CPU CFS  period",
      "--cpu-quota": "--- Limit CPU CFS  quota",
      "--cpu-rt-period": "--- Limit CPU real-time period in microseconds",
      "--cpu-rt-runtime": "--- Limit CPU real-time runtime in microseconds",
      "-c|--cpu-shares": "--- CPU shares ",
      "--cpus": "--- Number of CPUs",
      "--cpuset-cpus": "--- CPUs in which to allow execution ",
      "--cpuset-mems": "--- MEMs in which to allow execution ",
      "-d|--detach": "--- Run container in background and print container ID",
      "--detach-keys": "--- Override the key sequence for detaching a container",
      "--device": "--- Add a host device to the container",
      "--device-cgroup-rule": "--- Add a rule to the cgroup allowed devices list",
      "--device-read-bps": "--- Limit read rate ",
      "--device-read-iops": "--- Limit read rate ",
      "--device-write-bps": "--- Limit write rate ",
      "--device-write-iops": "--- Limit write rate ",
      "--disable-content-trust": "--- Skip image verification ",
      "--dns": "--- Set custom DNS servers",
      "--dns-option": "--- Set DNS options",
      "--dns-search": "--- Set custom DNS search domains",
      "--domainname": "--- Container NIS domain name",
      "--entrypoint": "--- Overwrite the default ENTRYPOINT of the image",
      "-e|--env": "--- Set environment variables",
      "--env-file": "--- Read in a file of environment variables",
      "--expose": "--- Expose a port or a range of ports",
      "--gpus": "--- GPU devices to add to the container ",
      "--group-add": "--- Add additional groups to join",
      "--health-cmd": "--- Command to run to check health",
      "--health-interval": "--- Time between running the check ",
      "--health-retries": "--- Consecutive failures needed to report unhealthy",
      "--health-start-period": "--- Start period for the container to initialize before starting health-retries countdown ",
      "--health-timeout": "--- Maximum time to allow one check to run ",
      "--help": "--- Print usage",
      "-h|--hostname": "--- Container host name",
      "--init": "--- Run an init inside the container that forwards signals and reaps processes",
      "-i|--interactive": "--- Keep STDIN open even if not attached",
      "--ip": "--- IPv4 address ",
      "--ip6": "--- IPv6 address ",
      "--ipc": "--- IPC mode to use",
      "--isolation": "--- Container isolation technology",
      "--kernel-memory": "--- Kernel memory limit",
      "-l|--label": "--- Set meta data on a container",
      "--label-file": "--- Read in a line delimited file of labels",
      "--link": "--- Add link to another container",
      "--link-local-ip": "--- Container IPv4/IPv6 link-local addresses",
      "--log-driver": "--- Logging driver for the container",
      "--log-opt": "--- Log driver options",
      "--mac-address": "--- Container MAC address ",
      "-m|--memory": "--- Memory limit",
      "--memory-reservation": "--- Memory soft limit",
      "--memory-swap": "--- Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
      "--memory-swappiness": "--- Tune container memory swappiness ",
      "--mount": "--- Attach a filesystem mount to the container",
      "--name": "--- Assign a name to the container",
      "--network": "--- Connect a container to a network",
      "--network-alias": "--- Add network-scoped alias for the container",
      "--no-healthcheck": "--- Disable any container-specified HEALTHCHECK",
      "--oom-kill-disable": "--- Disable OOM Killer",
      "--oom-score-adj": "--- Tune host's OOM preferences ",
      "--pid": "--- PID namespace to use",
      "--pids-limit": "--- Tune container pids limit ",
      "--platform": "--- Set platform if server is multi-platform capable",
      "--privileged": "--- Give extended privileges to this container",
      "-p|--publish": "--- Publish a container's port to the host",
      "-P|--publish-all": "--- Publish all exposed ports to random ports",
      "--pull": "--- Pull image before running ",
      "--read-only": "--- Mount the container's root filesystem as read only",
      "--restart": "--- Restart policy to apply when a container exits ",
      "--rm": "--- Automatically remove the container when it exits",
      "--runtime": "--- Runtime to use for this container",
      "--security-opt": "--- Security Options",
      "--shm-size": "--- Size of /dev/shm",
      "--sig-proxy": "--- Proxy received signals to the process ",
      "--stop-signal": "--- Signal to stop a container ",
      "--stop-timeout": "--- Timeout  to stop a container",
      "--storage-opt": "--- Storage driver options for the container",
      "--sysctl": "--- Sysctl options ",
      "--tmpfs": "--- Mount a tmpfs directory",
      "-t|--tty": "--- Allocate a pseudo-TTY",
      "--ulimit": "--- Ulimit options ",
      "-u|--user": "--- Username or UID ",
      "--userns": "--- User namespace to use",
      "--uts": "--- UTS namespace to use",
      "-v|--volume": "--- Bind mount a volume",
      "--volume-driver": "--- Optional volume driver for the container",
      "--volumes-from": "--- Mount volumes from the specified container",
      "-w|--workdir": "--- Working directory inside the container",
      "#desc": "Run a command in a new container"
    },
    "start": {
      "-a|--attach": "--- Attach STDOUT/STDERR and forward signals",
      "--detach-keys": "--- Override the key sequence for detaching a container",
      "-i|--interactive": "--- Attach container's STDIN",
      "#desc": "Start one or more stopped containers"
    },
    "stats": {
      "-a|--all": "--- Show all containers ",
      "--format": "--- Pretty-print images using a Go template",
      "--no-stream": "--- Disable streaming stats and only pull the first result",
      "--no-trunc": "--- Do not truncate output",
      "#desc": "Display a live stream of container resource usage statistics"
    },
    "stop": {
      "-t|--time": "--- Seconds to wait for stop before killing it ",
      "#desc": "Stop one or more running containers"
    },
    "top": {
      "#desc": "Display the running processes of a container"
    },
    "unpause": {
      "#desc": "Unpause all processes within one or more containers"
    },
    "update": {
      "--blkio-weight": "--- Block IO ",
      "--cpu-period": "--- Limit CPU CFS  period",
      "--cpu-quota": "--- Limit CPU CFS  quota",
      "--cpu-rt-period": "--- Limit the CPU real-time period in microseconds",
      "--cpu-rt-runtime": "--- Limit the CPU real-time runtime in microseconds",
      "-c|--cpu-shares": "--- CPU shares ",
      "--cpus": "--- Number of CPUs",
      "--cpuset-cpus": "--- CPUs in which to allow execution ",
      "--cpuset-mems": "--- MEMs in which to allow execution ",
      "--kernel-memory": "--- Kernel memory limit",
      "-m|--memory": "--- Memory limit",
      "--memory-reservation": "--- Memory soft limit",
      "--memory-swap": "--- Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
      "--pids-limit": "--- Tune container pids limit ",
      "--restart": "--- Restart policy to apply when a container exits",
      "#desc": "Update configuration of one or more containers"
    },
    "wait": {
      "#desc": "Block until one or more containers stop, then print their exit codes"
    },
    "#desc": "Manage containers"
  },
  "context": {
    "create": {
      "aci": {
        "--description": "--- Description of the context",
        "-h|--help": "--- Help for aci",
        "--location": "--- Location",
        "--resource-group": "--- Resource group",
        "--subscription-id": "--- Subscription id",
        "#desc": "Create a context for Azure Container Instances"
      },
      "ecs": {
        "--access-keys": "--- Use AWS access keys from file",
        "--description": "--- Description of the context",
        "--from-env": "--- Use AWS environment variables for profile, or credentials and region",
        "-h|--help": "--- Help for ecs",
        "--local-simulation": "--- Create context for ECS local simulation endpoints",
        "--profile": "--- Use an existing AWS profile",
        "#desc": "Create a context for Amazon ECS"
      },
      "--default-stack-orchestrator": "--- Default orchestrator for stack operations to use with this context ",
      "--description": "--- Description of the context",
      "--docker": "--- Set the docker endpoint ",
      "--from": "--- Create context from a named context",
      "-h|--help": "--- Help for create",
      "--kubernetes": "--- Set the kubernetes endpoint ",
      "#desc": "Create new context"
    },
    "export": {
      "-h|--help": "--- Help for export",
      "--kubeconfig": "--- Export as a kubeconfig file",
      "#desc": "Export a context to a tar or kubeconfig file"
    },
    "import": {
      "-h|--help": "--- Help for import",
      "#desc": "Import a context from a tar or zip file"
    },
    "inspect": {
      "-f|--format": "--- Format the output using the given Go template",
      "-h|--help": "--- Help for inspect",
      "#desc": "Display detailed information on one or more contexts"
    },
    "list": {
      "--format": "--- Format the output. Values: [pretty | json]. ",
      "-h|--help": "--- Help for list",
      "-q|--quiet": "--- Only show context names",
      "#desc": "List available contexts"
    },
    "rm": {
      "-f|--force": "--- Force removing current context",
      "-h|--help": "--- Help for rm",
      "#desc": "Remove one or more contexts"
    },
    "show": {
      "-h|--help": "--- Help for show",
      "#desc": "Print the current context"
    },
    "update": {
      "--default-stack-orchestrator": "--- Default orchestrator for stack operations to use with this context ",
      "--description": "--- Description of the context",
      "--docker": "--- Set the docker endpoint ",
      "-h|--help": "--- Help for update",
      "--kubernetes": "--- Set the kubernetes endpoint ",
      "#desc": "Update a context"
    },
    "use": {
      "-h|--help": "--- Help for use",
      "#desc": "Set the default context"
    },
    "-h|--help": "--- Help for context",
    "#desc": "Manage contexts"
  },
  "image": {
    "build": {
      "--add-host": "--- Add a custom host-to-IP mapping ",
      "--build-arg": "--- Set build-time variables",
      "--cache-from": "--- Images to consider as cache sources",
      "--disable-content-trust": "--- Skip image verification ",
      "-f|--file": "--- Name of the Dockerfile ",
      "--iidfile": "--- Write the image ID to the file",
      "--isolation": "--- Container isolation technology",
      "--label": "--- Set metadata for an image",
      "--network": "--- Set the networking mode for the RUN instructions during build ",
      "--no-cache": "--- Do not use cache when building the image",
      "-o|--output": "--- Output destination ",
      "--platform": "--- Set platform if server is multi-platform capable",
      "--progress": "--- Set type of progress output ",
      "--pull": "--- Always attempt to pull a newer version of the image",
      "-q|--quiet": "--- Suppress the build output and print image ID on success",
      "--secret": "--- Secret file to expose to the build : id=mysecret,src=/local/secret",
      "--ssh": "--- SSH agent socket or keys to expose to the build  (format: default|",
      "-t|--tag": "--- Name and optionally a tag in the 'name:tag' format",
      "--target": "--- Set the target build stage to build.",
      "#desc": "Build an image from a Dockerfile"
    },
    "history": {
      "--format": "--- Pretty-print images using a Go template",
      "-H|--human": "--- Print sizes and dates in human readable format ",
      "--no-trunc": "--- Don't truncate output",
      "-q|--quiet": "--- Only show image IDs",
      "#desc": "Show the history of an image"
    },
    "import": {
      "-c|--change": "--- Apply Dockerfile instruction to the created image",
      "-m|--message": "--- Set commit message for imported image",
      "--platform": "--- Set platform if server is multi-platform capable",
      "#desc": "Import the contents from a tarball to create a filesystem image"
    },
    "inspect": {
      "-f|--format": "--- Format the output using the given Go template",
      "#desc": "Display detailed information on one or more images"
    },
    "load": {
      "-i|--input": "--- Read from tar archive file, instead of STDIN",
      "-q|--quiet": "--- Suppress the load output",
      "#desc": "Load an image from a tar archive or STDIN"
    },
    "ls": {
      "-a|--all": "--- Show all images ",
      "--digests": "--- Show digests",
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Pretty-print images using a Go template",
      "--no-trunc": "--- Don't truncate output",
      "-q|--quiet": "--- Only show image IDs",
      "#desc": "List images"
    },
    "prune": {
      "-a|--all": "--- Remove all unused images, not just dangling ones",
      "--filter": "--- Provide filter values ",
      "-f|--force": "--- Do not prompt for confirmation",
      "#desc": "Remove unused images"
    },
    "pull": {
      "-a|--all-tags": "--- Download all tagged images in the repository",
      "--disable-content-trust": "--- Skip image verification ",
      "--platform": "--- Set platform if server is multi-platform capable",
      "-q|--quiet": "--- Suppress verbose output",
      "#desc": "Pull an image or a repository from a registry"
    },
    "push": {
      "-a|--all-tags": "--- Push all tagged images in the repository",
      "--disable-content-trust": "--- Skip image signing ",
      "-q|--quiet": "--- Suppress verbose output",
      "#desc": "Push an image or a repository to a registry"
    },
    "rm": {
      "-f|--force": "--- Force removal of the image",
      "--no-prune": "--- Do not delete untagged parents",
      "#desc": "Remove one or more images"
    },
    "save": {
      "-o|--output": "--- Write to a file, instead of STDOUT",
      "#desc": "Save one or more images to a tar archive "
    },
    "tag": {
      "#desc": "Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE"
    },
    "#desc": "Manage images"
  },
  "manifest": {
    "annotate": {
      "--arch": "--- Set architecture",
      "--os": "--- Set operating system",
      "--os-features": "--- Set operating system feature",
      "--os-version": "--- Set operating system version",
      "--variant": "--- Set architecture variant",
      "#desc": "Add additional information to a local image manifest"
    },
    "create": {
      "-a|--amend": "--- Amend an existing manifest list",
      "--insecure": "--- Allow communication with an insecure registry",
      "#desc": "Create a local manifest list for annotating and pushing to a registry"
    },
    "inspect": {
      "--insecure": "--- Allow communication with an insecure registry",
      "-v|--verbose": "--- Output additional info including layers and platform",
      "#desc": "Display an image manifest, or manifest list"
    },
    "push": {
      "--insecure": "--- Allow push to an insecure registry",
      "-p|--purge": "--- Remove the local manifest list after push",
      "#desc": "Push a manifest list to a repository"
    },
    "rm": {
      "#desc": "Delete one or more manifest lists from local storage"
    },
    "#desc": "Manage Docker image manifests and manifest lists"
  },
  "network": {
    "connect": {
      "--alias": "--- Add network-scoped alias for the container",
      "--driver-opt": "--- Add network-scoped alias for the container",
      "--ip": "--- IPv4 address ",
      "--ip6": "--- IPv6 address ",
      "--link": "--- Add link to another container",
      "--link-local-ip": "--- Add a link-local address for the container",
      "#desc": "Connect a container to a network"
    },
    "create": {
      "--attachable": "--- Enable manual container attachment",
      "--aux-address": "--- Auxiliary IPv4 or IPv6 addresses used by Network driver ",
      "--config-from": "--- The network from which to copy the configuration",
      "--config-only": "--- Create a configuration only network",
      "-d|--driver": "--- Driver to manage the Network ",
      "--gateway": "--- IPv4 or IPv6 Gateway for the master subnet",
      "--ingress": "--- Create swarm routing-mesh network",
      "--internal": "--- Restrict external access to the network",
      "--ip-range": "--- Allocate container ip from a sub-range",
      "--ipam-driver": "--- IP Address Management Driver ",
      "--ipam-opt": "--- Set IPAM driver specific options ",
      "--ipv6": "--- Enable IPv6 networking",
      "--label": "--- Set metadata on a network",
      "-o|--opt": "--- Set driver specific options ",
      "--scope": "--- Control the network's scope",
      "--subnet": "--- Subnet in CIDR format that represents a network segment",
      "#desc": "Create a network"
    },
    "disconnect": {
      "-f|--force": "--- Force the container to disconnect from a network",
      "#desc": "Disconnect a container from a network"
    },
    "inspect": {
      "-f|--format": "--- Format the output using the given Go template",
      "-v|--verbose": "--- Verbose output for diagnostics",
      "#desc": "Display detailed information on one or more networks"
    },
    "ls": {
      "-f|--filter": "--- Provide filter values ",
      "--format": "--- Pretty-print networks using a Go template",
      "--no-trunc": "--- Do not truncate the output",
      "-q|--quiet": "--- Only display network IDs",
      "#desc": "List networks"
    },
    "prune": {
      "--filter": "--- Provide filter values ",
      "-f|--force": "--- Do not prompt for confirmation",
      "#desc": "Remove all unused networks"
    },
    "rm": {
      "#desc": "Remove one or more networks"
    },
    "#desc": "Manage networks"
  },
  "node": {
    "demote": {
      "#desc": "Demote one or more nodes from manager in the swarm"
    },
    "inspect": {
      "-f|--format": "--- Format the output using the given Go template",
      "--pretty": "--- Print the information in a human friendly format",
      "#desc": "Display detailed information on one or more nodes"
    },
    "ls": {
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Pretty-print nodes using a Go template",
      "-q|--quiet": "--- Only display IDs",
      "#desc": "List nodes in the swarm"
    },
    "promote": {
      "#desc": "Promote one or more nodes to manager in the swarm"
    },
    "ps": {
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Pretty-print tasks using a Go template",
      "--no-resolve": "--- Do not map IDs to Names",
      "--no-trunc": "--- Do not truncate output",
      "-q|--quiet": "--- Only display task IDs",
      "#desc": "List tasks running on one or more nodes, defaults to current node"
    },
    "rm": {
      "-f|--force": "--- Force remove a node from the swarm",
      "#desc": "Remove one or more nodes from the swarm"
    },
    "update": {
      "--availability": "--- Availability of the node ",
      "--label-add": "--- Add or update a node label ",
      "--label-rm": "--- Remove a node label if exists",
      "--role": "--- Role of the node ",
      "#desc": "Update a node"
    },
    "#desc": "Manage Swarm nodes"
  },
  "plugin": {
    "create": {
      "--compress": "--- Compress the context using gzip",
      "#desc": "Create a plugin from a rootfs and configuration. Plugin data directory must contain config.json and rootfs directory."
    },
    "disable": {
      "-f|--force": "--- Force the disable of an active plugin",
      "#desc": "Disable a plugin"
    },
    "enable": {
      "--timeout": "--- HTTP client timeout ",
      "#desc": "Enable a plugin"
    },
    "inspect": {
      "-f|--format": "--- Format the output using the given Go template",
      "#desc": "Display detailed information on one or more plugins"
    },
    "install": {
      "--alias": "--- Local name for plugin",
      "--disable": "--- Do not enable the plugin on install",
      "--disable-content-trust": "--- Skip image verification ",
      "--grant-all-permissions": "--- Grant all permissions necessary to run the plugin",
      "#desc": "Install a plugin"
    },
    "ls": {
      "-f|--filter": "--- Provide filter values ",
      "--format": "--- Pretty-print plugins using a Go template",
      "--no-trunc": "--- Don't truncate output",
      "-q|--quiet": "--- Only display plugin IDs",
      "#desc": "List plugins"
    },
    "push": {
      "--disable-content-trust": "--- Skip image signing ",
      "#desc": "Push a plugin to a registry"
    },
    "rm": {
      "-f|--force": "--- Force the removal of an active plugin",
      "#desc": "Remove one or more plugins"
    },
    "set": {
      "#desc": "Change settings for a plugin"
    },
    "upgrade": {
      "--disable-content-trust": "--- Skip image verification ",
      "--grant-all-permissions": "--- Grant all permissions necessary to run the plugin",
      "--skip-remote-check": "--- Do not check if specified remote plugin matches existing plugin image",
      "#desc": "Upgrade an existing plugin"
    },
    "#desc": "Manage plugins"
  },
  "scan": {
    "--accept-license": "--- Accept using a third party scanning provider",
    "--dependency-tree": "--- Show dependency tree with scan results",
    "--exclude-base": "--- Exclude base image from vulnerability scanning ",
    "-f|--file": "--- Dockerfile associated with image, provides more detailed results",
    "--group-issues": "--- Aggregate duplicated vulnerabilities and group them to a single one ",
    "--json": "--- Output results in JSON format",
    "--login": "--- Authenticate to the scan provider using an optional token , or web base token if empty",
    "--reject-license": "--- Reject using a third party scanning provider",
    "--severity": "--- Only report vulnerabilities of provided level or higher ",
    "--token": "--- Authentication token to login to the third party scanning provider",
    "--version": "--- Display version of the scan plugin",
    "#desc": "Docker Scan "
  },
  "secret": {
    "create": {
      "-d|--driver": "--- Secret driver",
      "-l|--label": "--- Secret labels",
      "--template-driver": "--- Template driver",
      "#desc": "Create a secret from a file or STDIN as content"
    },
    "inspect": {
      "-f|--format": "--- Format the output using the given Go template",
      "--pretty": "--- Print the information in a human friendly format",
      "#desc": "Display detailed information on one or more secrets"
    },
    "ls": {
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Pretty-print secrets using a Go template",
      "-q|--quiet": "--- Only display IDs",
      "#desc": "List secrets"
    },
    "rm": {
      "#desc": "Remove one or more secrets"
    },
    "#desc": "Manage Docker secrets"
  },
  "service": {
    "create": {
      "--cap-add": "--- Add Linux capabilities",
      "--cap-drop": "--- Drop Linux capabilities",
      "--config": "--- Specify configurations to expose to the service",
      "--constraint": "--- Placement constraints",
      "--container-label": "--- Container labels",
      "--credential-spec": "--- Credential spec for managed service account ",
      "-d|--detach": "--- Exit immediately instead of waiting for the service to converge",
      "--dns": "--- Set custom DNS servers",
      "--dns-option": "--- Set DNS options",
      "--dns-search": "--- Set custom DNS search domains",
      "--endpoint-mode": "--- Endpoint mode ",
      "--entrypoint": "--- Overwrite the default ENTRYPOINT of the image",
      "-e|--env": "--- Set environment variables",
      "--env-file": "--- Read in a file of environment variables",
      "--generic-resource": "--- User defined resources",
      "--group": "--- Set one or more supplementary user groups for the container",
      "--health-cmd": "--- Command to run to check health",
      "--health-interval": "--- Time between running the check ",
      "--health-retries": "--- Consecutive failures needed to report unhealthy",
      "--health-start-period": "--- Start period for the container to initialize before counting retries towards unstable ",
      "--health-timeout": "--- Maximum time to allow one check to run ",
      "--host": "--- Set one or more custom host-to-IP mappings ",
      "--hostname": "--- Container hostname",
      "--init": "--- Use an init inside each service container to forward signals and reap processes",
      "--isolation": "--- Service container isolation mode",
      "-l|--label": "--- Service labels",
      "--limit-cpu": "--- Limit CPUs",
      "--limit-memory": "--- Limit Memory",
      "--limit-pids": "--- Limit maximum number of processes ",
      "--log-driver": "--- Logging driver for service",
      "--log-opt": "--- Logging driver options",
      "--max-concurrent": "--- Number of job tasks to run concurrently ",
      "--mode": "--- Service mode ",
      "--mount": "--- Attach a filesystem mount to the service",
      "--name": "--- Service name",
      "--network": "--- Network attachments",
      "--no-healthcheck": "--- Disable any container-specified HEALTHCHECK",
      "--no-resolve-image": "--- Do not query the registry to resolve image digest and supported platforms",
      "--placement-pref": "--- Add a placement preference",
      "-p|--publish": "--- Publish a port as a node port",
      "-q|--quiet": "--- Suppress progress output",
      "--read-only": "--- Mount the container's root filesystem as read only",
      "--replicas": "--- Number of tasks",
      "--replicas-max-per-node": "--- Maximum number of tasks per node ",
      "--reserve-cpu": "--- Reserve CPUs",
      "--reserve-memory": "--- Reserve Memory",
      "--restart-condition": "--- Restart when condition is met ",
      "--restart-delay": "--- Delay between restart attempts ",
      "--restart-max-attempts": "--- Maximum number of restarts before giving up",
      "--restart-window": "--- Window used to evaluate the restart policy ",
      "--rollback-delay": "--- Delay between task rollbacks ",
      "--rollback-failure-action": "--- Action on rollback failure ",
      "--rollback-max-failure-ratio": "--- Failure rate to tolerate during a rollback ",
      "--rollback-monitor": "--- Duration after each task rollback to monitor for failure ",
      "--rollback-order": "--- Rollback order ",
      "--rollback-parallelism": "--- Maximum number of tasks rolled back simultaneously ",
      "--secret": "--- Specify secrets to expose to the service",
      "--stop-grace-period": "--- Time to wait before force killing a container ",
      "--stop-signal": "--- Signal to stop the container",
      "--sysctl": "--- Sysctl options",
      "-t|--tty": "--- Allocate a pseudo-TTY",
      "--ulimit": "--- Ulimit options ",
      "--update-delay": "--- Delay between updates ",
      "--update-failure-action": "--- Action on update failure ",
      "--update-max-failure-ratio": "--- Failure rate to tolerate during an update ",
      "--update-monitor": "--- Duration after each task update to monitor for failure ",
      "--update-order": "--- Update order ",
      "--update-parallelism": "--- Maximum number of tasks updated simultaneously ",
      "-u|--user": "--- Username or UID ",
      "--with-registry-auth": "--- Send registry authentication details to swarm agents",
      "-w|--workdir": "--- Working directory inside the container",
      "#desc": "Create a new service"
    },
    "inspect": {
      "-f|--format": "--- Format the output using the given Go template",
      "--pretty": "--- Print the information in a human friendly format",
      "#desc": "Display detailed information on one or more services"
    },
    "logs": {
      "--details": "--- Show extra details provided to logs",
      "-f|--follow": "--- Follow log output",
      "--no-resolve": "--- Do not map IDs to Names in output",
      "--no-task-ids": "--- Do not include task IDs in output",
      "--no-trunc": "--- Do not truncate output",
      "--raw": "--- Do not neatly format logs",
      "--since": "--- Show logs since timestamp ",
      "-n|--tail": "--- Number of lines to show from the end of the logs ",
      "-t|--timestamps": "--- Show timestamps",
      "#desc": "Fetch the logs of a service or task"
    },
    "ls": {
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Pretty-print services using a Go template",
      "-q|--quiet": "--- Only display IDs",
      "#desc": "List services"
    },
    "ps": {
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Pretty-print tasks using a Go template",
      "--no-resolve": "--- Do not map IDs to Names",
      "--no-trunc": "--- Do not truncate output",
      "-q|--quiet": "--- Only display task IDs",
      "#desc": "List the tasks of one or more services"
    },
    "rm": {
      "#desc": "Remove one or more services"
    },
    "rollback": {
      "-d|--detach": "--- Exit immediately instead of waiting for the service to converge",
      "-q|--quiet": "--- Suppress progress output",
      "#desc": "Revert changes to a service's configuration"
    },
    "scale": {
      "-d|--detach": "--- Exit immediately instead of waiting for the service to converge",
      "#desc": "Scale one or multiple replicated services"
    },
    "update": {
      "--args": "--- Service command args",
      "--cap-add": "--- Add Linux capabilities",
      "--cap-drop": "--- Drop Linux capabilities",
      "--config-add": "--- Add or update a config file on a service",
      "--config-rm": "--- Remove a configuration file",
      "--constraint-add": "--- Add or update a placement constraint",
      "--constraint-rm": "--- Remove a constraint",
      "--container-label-add": "--- Add or update a container label",
      "--container-label-rm": "--- Remove a container label by its key",
      "--credential-spec": "--- Credential spec for managed service account ",
      "-d|--detach": "--- Exit immediately instead of waiting for the service to converge",
      "--dns-add": "--- Add or update a custom DNS server",
      "--dns-option-add": "--- Add or update a DNS option",
      "--dns-option-rm": "--- Remove a DNS option",
      "--dns-rm": "--- Remove a custom DNS server",
      "--dns-search-add": "--- Add or update a custom DNS search domain",
      "--dns-search-rm": "--- Remove a DNS search domain",
      "--endpoint-mode": "--- Endpoint mode ",
      "--entrypoint": "--- Overwrite the default ENTRYPOINT of the image",
      "--env-add": "--- Add or update an environment variable",
      "--env-rm": "--- Remove an environment variable",
      "--force": "--- Force update even if no changes require it",
      "--generic-resource-add": "--- Add a Generic resource",
      "--generic-resource-rm": "--- Remove a Generic resource",
      "--group-add": "--- Add an additional supplementary user group to the container",
      "--group-rm": "--- Remove a previously added supplementary user group from the container",
      "--health-cmd": "--- Command to run to check health",
      "--health-interval": "--- Time between running the check ",
      "--health-retries": "--- Consecutive failures needed to report unhealthy",
      "--health-start-period": "--- Start period for the container to initialize before counting retries towards unstable ",
      "--health-timeout": "--- Maximum time to allow one check to run ",
      "--host-add": "--- Add a custom host-to-IP mapping ",
      "--host-rm": "--- Remove a custom host-to-IP mapping ",
      "--hostname": "--- Container hostname",
      "--image": "--- Service image tag",
      "--init": "--- Use an init inside each service container to forward signals and reap processes",
      "--isolation": "--- Service container isolation mode",
      "--label-add": "--- Add or update a service label",
      "--label-rm": "--- Remove a label by its key",
      "--limit-cpu": "--- Limit CPUs",
      "--limit-memory": "--- Limit Memory",
      "--limit-pids": "--- Limit maximum number of processes ",
      "--log-driver": "--- Logging driver for service",
      "--log-opt": "--- Logging driver options",
      "--max-concurrent": "--- Number of job tasks to run concurrently ",
      "--mount-add": "--- Add or update a mount on a service",
      "--mount-rm": "--- Remove a mount by its target path",
      "--network-add": "--- Add a network",
      "--network-rm": "--- Remove a network",
      "--no-healthcheck": "--- Disable any container-specified HEALTHCHECK",
      "--no-resolve-image": "--- Do not query the registry to resolve image digest and supported platforms",
      "--placement-pref-add": "--- Add a placement preference",
      "--placement-pref-rm": "--- Remove a placement preference",
      "--publish-add": "--- Add or update a published port",
      "--publish-rm": "--- Remove a published port by its target port",
      "-q|--quiet": "--- Suppress progress output",
      "--read-only": "--- Mount the container's root filesystem as read only",
      "--replicas": "--- Number of tasks",
      "--replicas-max-per-node": "--- Maximum number of tasks per node ",
      "--reserve-cpu": "--- Reserve CPUs",
      "--reserve-memory": "--- Reserve Memory",
      "--restart-condition": "--- Restart when condition is met ",
      "--restart-delay": "--- Delay between restart attempts ",
      "--restart-max-attempts": "--- Maximum number of restarts before giving up",
      "--restart-window": "--- Window used to evaluate the restart policy ",
      "--rollback": "--- Rollback to previous specification",
      "--rollback-delay": "--- Delay between task rollbacks ",
      "--rollback-failure-action": "--- Action on rollback failure ",
      "--rollback-max-failure-ratio": "--- Failure rate to tolerate during a rollback",
      "--rollback-monitor": "--- Duration after each task rollback to monitor for failure ",
      "--rollback-order": "--- Rollback order ",
      "--rollback-parallelism": "--- Maximum number of tasks rolled back simultaneously ",
      "--secret-add": "--- Add or update a secret on a service",
      "--secret-rm": "--- Remove a secret",
      "--stop-grace-period": "--- Time to wait before force killing a container ",
      "--stop-signal": "--- Signal to stop the container",
      "--sysctl-add": "--- Add or update a Sysctl option",
      "--sysctl-rm": "--- Remove a Sysctl option",
      "-t|--tty": "--- Allocate a pseudo-TTY",
      "--ulimit-add": "--- Add or update a ulimit option ",
      "--ulimit-rm": "--- Remove a ulimit option",
      "--update-delay": "--- Delay between updates ",
      "--update-failure-action": "--- Action on update failure ",
      "--update-max-failure-ratio": "--- Failure rate to tolerate during an update",
      "--update-monitor": "--- Duration after each task update to monitor for failure ",
      "--update-order": "--- Update order ",
      "--update-parallelism": "--- Maximum number of tasks updated simultaneously ",
      "-u|--user": "--- Username or UID ",
      "--with-registry-auth": "--- Send registry authentication details to swarm agents",
      "-w|--workdir": "--- Working directory inside the container",
      "#desc": "Update a service"
    },
    "#desc": "Manage services"
  },
  "stack": {
    "--orchestrator": "--- Orchestrator to use ",
    "deploy": {
      "-c|--compose-file": "--- Path to a Compose file, or - to read from stdin",
      "--orchestrator": "--- Orchestrator to use ",
      "--prune": "--- Prune services that are no longer referenced",
      "--resolve-image": "--- Query the registry to resolve image digest and supported platforms ",
      "--with-registry-auth": "--- Send registry authentication details to Swarm agents",
      "#desc": "Deploy a new stack or update an existing stack"
    },
    "ls": {
      "--format": "--- Pretty-print stacks using a Go template",
      "--orchestrator": "--- Orchestrator to use ",
      "#desc": "List stacks"
    },
    "ps": {
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Pretty-print tasks using a Go template",
      "--no-resolve": "--- Do not map IDs to Names",
      "--no-trunc": "--- Do not truncate output",
      "--orchestrator": "--- Orchestrator to use ",
      "-q|--quiet": "--- Only display task IDs",
      "#desc": "List the tasks in the stack"
    },
    "rm": {
      "--orchestrator": "--- Orchestrator to use ",
      "#desc": "Remove one or more stacks"
    },
    "services": {
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Pretty-print services using a Go template",
      "--orchestrator": "--- Orchestrator to use ",
      "-q|--quiet": "--- Only display IDs",
      "#desc": "List the services in the stack"
    },
    "#desc": "Manage Docker stacks"
  },
  "swarm": {
    "ca": {
      "--ca-cert": "--- Path to the PEM-formatted root CA certificate to use for the new cluster",
      "--ca-key": "--- Path to the PEM-formatted root CA key to use for the new cluster",
      "--cert-expiry": "--- Validity period for node certificates ",
      "-d|--detach": "--- Exit immediately instead of waiting for the root rotation to converge",
      "--external-ca": "--- Specifications of one or more certificate signing endpoints",
      "-q|--quiet": "--- Suppress progress output",
      "--rotate": "--- Rotate the swarm CA - if no certificate or key are provided, new ones will be generated",
      "#desc": "Display and rotate the root CA"
    },
    "init": {
      "--advertise-addr": "--- Advertised address ",
      "--autolock": "--- Enable manager autolocking ",
      "--availability": "--- Availability of the node ",
      "--cert-expiry": "--- Validity period for node certificates ",
      "--data-path-addr": "--- Address or interface to use for data path traffic ",
      "--data-path-port": "--- Port number to use for data path traffic  is used.",
      "--default-addr-pool": "--- CIDR format ",
      "--default-addr-pool-mask-length": "--- CIDR format ",
      "--dispatcher-heartbeat": "--- Dispatcher heartbeat period ",
      "--external-ca": "--- Specifications of one or more certificate signing endpoints",
      "--force-new-cluster": "--- Force create a new cluster from current state",
      "--listen-addr": "--- Listen address ",
      "--max-snapshots": "--- Number of additional Raft snapshots to retain",
      "--snapshot-interval": "--- Number of log entries between Raft snapshots ",
      "--task-history-limit": "--- Task history retention limit ",
      "#desc": "Initialize a swarm"
    },
    "join": {
      "--advertise-addr": "--- Advertised address ",
      "--availability": "--- Availability of the node ",
      "--data-path-addr": "--- Address or interface to use for data path traffic ",
      "--listen-addr": "--- Listen address ",
      "--token": "--- Token for entry into the swarm",
      "#desc": "Join a swarm as a node and/or manager"
    },
    "join-token": {
      "-q|--quiet": "--- Only display token",
      "--rotate": "--- Rotate join token",
      "#desc": "Manage join tokens"
    },
    "leave": {
      "-f|--force": "--- Force this node to leave the swarm, ignoring warnings",
      "#desc": "Leave the swarm"
    },
    "unlock": {
      "#desc": "Unlock swarm"
    },
    "unlock-key": {
      "-q|--quiet": "--- Only display token",
      "--rotate": "--- Rotate unlock key",
      "#desc": "Manage the unlock key"
    },
    "update": {
      "--autolock": "--- Change manager autolocking setting ",
      "--cert-expiry": "--- Validity period for node certificates ",
      "--dispatcher-heartbeat": "--- Dispatcher heartbeat period ",
      "--external-ca": "--- Specifications of one or more certificate signing endpoints",
      "--max-snapshots": "--- Number of additional Raft snapshots to retain",
      "--snapshot-interval": "--- Number of log entries between Raft snapshots ",
      "--task-history-limit": "--- Task history retention limit ",
      "#desc": "Update the swarm"
    },
    "#desc": "Manage Swarm"
  },
  "system": {
    "df": {
      "--format": "--- Pretty-print images using a Go template",
      "-v|--verbose": "--- Show detailed information on space usage",
      "#desc": "Show docker disk usage"
    },
    "events": {
      "-f|--filter": "--- Filter output based on conditions provided",
      "--format": "--- Format the output using the given Go template",
      "--since": "--- Show all events created since timestamp",
      "--until": "--- Stream events until this timestamp",
      "#desc": "Get real time events from the server"
    },
    "info": {
      "-f|--format": "--- Format the output using the given Go template",
      "#desc": "Display system-wide information"
    },
    "prune": {
      "-a|--all": "--- Remove all unused images not just dangling ones",
      "--filter": "--- Provide filter values ",
      "-f|--force": "--- Do not prompt for confirmation",
      "--volumes": "--- Prune volumes",
      "#desc": "Remove unused data"
    },
    "#desc": "Manage Docker"
  },
  "trust": {
    "key": {
      "generate": {
        "--dir": "--- Directory to generate key in, defaults to current directory",
        "#desc": "Generate and load a signing key-pair"
      },
      "load": {
        "--name": "--- Name for the loaded key ",
        "#desc": "Load a private key file for signing"
      },
      "#desc": "Manage keys for signing Docker images"
    },
    "signer": {
      "add": {
        "--key": "--- Path to the signer's public key file",
        "#desc": "Add a signer"
      },
      "remove": {
        "-f|--force": "--- Do not prompt for confirmation before removing the most recent signer",
        "#desc": "Remove a signer"
      },
      "#desc": "Manage entities who can sign Docker images"
    },
    "inspect": {
      "--pretty": "--- Print the information in a human friendly format",
      "#desc": "Return low-level information about keys and signatures"
    },
    "revoke": {
      "-y|--yes": "--- Do not prompt for confirmation",
      "#desc": "Remove trust for an image"
    },
    "sign": {
      "--local": "--- Sign a locally tagged image",
      "#desc": "Sign an image"
    },
    "#desc": "Manage trust on Docker images"
  },
  "volume": {
    "create": {
      "-d|--driver": "--- Specify volume driver name ",
      "--label": "--- Set metadata for a volume",
      "-o|--opt": "--- Set driver specific options ",
      "#desc": "Create a volume"
    },
    "inspect": {
      "-f|--format": "--- Format the output using the given Go template",
      "#desc": "Display detailed information on one or more volumes"
    },
    "ls": {
      "-f|--filter": "--- Provide filter values ",
      "--format": "--- Pretty-print volumes using a Go template",
      "-q|--quiet": "--- Only display volume names",
      "#desc": "List volumes"
    },
    "prune": {
      "--filter": "--- Provide filter values ",
      "-f|--force": "--- Do not prompt for confirmation",
      "#desc": "Remove all unused local volumes"
    },
    "rm": {
      "-f|--force": "--- Force the removal of one or more volumes",
      "#desc": "Remove one or more volumes"
    },
    "#desc": "Manage volumes"
  },
  "attach": {
    "--detach-keys": "--- Override the key sequence for detaching a container",
    "--no-stdin": "--- Do not attach STDIN",
    "--sig-proxy": "--- Proxy all received signals to the process ",
    "#desc": "Attach local standard input, output, and error streams to a running container"
  },
  "build": {
    "--add-host": "--- Add a custom host-to-IP mapping ",
    "--build-arg": "--- Set build-time variables",
    "--cache-from": "--- Images to consider as cache sources",
    "--disable-content-trust": "--- Skip image verification ",
    "-f|--file": "--- Name of the Dockerfile ",
    "--iidfile": "--- Write the image ID to the file",
    "--isolation": "--- Container isolation technology",
    "--label": "--- Set metadata for an image",
    "--network": "--- Set the networking mode for the RUN instructions during build ",
    "--no-cache": "--- Do not use cache when building the image",
    "-o|--output": "--- Output destination ",
    "--platform": "--- Set platform if server is multi-platform capable",
    "--progress": "--- Set type of progress output ",
    "--pull": "--- Always attempt to pull a newer version of the image",
    "-q|--quiet": "--- Suppress the build output and print image ID on success",
    "--secret": "--- Secret file to expose to the build : id=mysecret,src=/local/secret",
    "--ssh": "--- SSH agent socket or keys to expose to the build  (format: default|",
    "-t|--tag": "--- Name and optionally a tag in the 'name:tag' format",
    "--target": "--- Set the target build stage to build.",
    "#desc": "Build an image from a Dockerfile"
  },
  "commit": {
    "-a|--author": "--- Author ",
    "-c|--change": "--- Apply Dockerfile instruction to the created image",
    "-m|--message": "--- Commit message",
    "-p|--pause": "--- Pause container during commit ",
    "#desc": "Create a new image from a container's changes"
  },
  "cp": {
    "-a|--archive": "--- Archive mode ",
    "-L|--follow-link": "--- Always follow symbol link in SRC_PATH",
    "#desc": "Copy files/folders between a container and the local filesystem"
  },
  "create": {
    "--add-host": "--- Add a custom host-to-IP mapping ",
    "-a|--attach": "--- Attach to STDIN, STDOUT or STDERR",
    "--blkio-weight": "--- Block IO ",
    "--blkio-weight-device": "--- Block IO weight ",
    "--cap-add": "--- Add Linux capabilities",
    "--cap-drop": "--- Drop Linux capabilities",
    "--cgroup-parent": "--- Optional parent cgroup for the container",
    "--cgroupns": "--- Cgroup namespace to use ",
    "--cidfile": "--- Write the container ID to the file",
    "--cpu-period": "--- Limit CPU CFS  period",
    "--cpu-quota": "--- Limit CPU CFS  quota",
    "--cpu-rt-period": "--- Limit CPU real-time period in microseconds",
    "--cpu-rt-runtime": "--- Limit CPU real-time runtime in microseconds",
    "-c|--cpu-shares": "--- CPU shares ",
    "--cpus": "--- Number of CPUs",
    "--cpuset-cpus": "--- CPUs in which to allow execution ",
    "--cpuset-mems": "--- MEMs in which to allow execution ",
    "--device": "--- Add a host device to the container",
    "--device-cgroup-rule": "--- Add a rule to the cgroup allowed devices list",
    "--device-read-bps": "--- Limit read rate ",
    "--device-read-iops": "--- Limit read rate ",
    "--device-write-bps": "--- Limit write rate ",
    "--device-write-iops": "--- Limit write rate ",
    "--disable-content-trust": "--- Skip image verification ",
    "--dns": "--- Set custom DNS servers",
    "--dns-option": "--- Set DNS options",
    "--dns-search": "--- Set custom DNS search domains",
    "--domainname": "--- Container NIS domain name",
    "--entrypoint": "--- Overwrite the default ENTRYPOINT of the image",
    "-e|--env": "--- Set environment variables",
    "--env-file": "--- Read in a file of environment variables",
    "--expose": "--- Expose a port or a range of ports",
    "--gpus": "--- GPU devices to add to the container ",
    "--group-add": "--- Add additional groups to join",
    "--health-cmd": "--- Command to run to check health",
    "--health-interval": "--- Time between running the check ",
    "--health-retries": "--- Consecutive failures needed to report unhealthy",
    "--health-start-period": "--- Start period for the container to initialize before starting health-retries countdown ",
    "--health-timeout": "--- Maximum time to allow one check to run ",
    "--help": "--- Print usage",
    "-h|--hostname": "--- Container host name",
    "--init": "--- Run an init inside the container that forwards signals and reaps processes",
    "-i|--interactive": "--- Keep STDIN open even if not attached",
    "--ip": "--- IPv4 address ",
    "--ip6": "--- IPv6 address ",
    "--ipc": "--- IPC mode to use",
    "--isolation": "--- Container isolation technology",
    "--kernel-memory": "--- Kernel memory limit",
    "-l|--label": "--- Set meta data on a container",
    "--label-file": "--- Read in a line delimited file of labels",
    "--link": "--- Add link to another container",
    "--link-local-ip": "--- Container IPv4/IPv6 link-local addresses",
    "--log-driver": "--- Logging driver for the container",
    "--log-opt": "--- Log driver options",
    "--mac-address": "--- Container MAC address ",
    "-m|--memory": "--- Memory limit",
    "--memory-reservation": "--- Memory soft limit",
    "--memory-swap": "--- Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
    "--memory-swappiness": "--- Tune container memory swappiness ",
    "--mount": "--- Attach a filesystem mount to the container",
    "--name": "--- Assign a name to the container",
    "--network": "--- Connect a container to a network",
    "--network-alias": "--- Add network-scoped alias for the container",
    "--no-healthcheck": "--- Disable any container-specified HEALTHCHECK",
    "--oom-kill-disable": "--- Disable OOM Killer",
    "--oom-score-adj": "--- Tune host's OOM preferences ",
    "--pid": "--- PID namespace to use",
    "--pids-limit": "--- Tune container pids limit ",
    "--platform": "--- Set platform if server is multi-platform capable",
    "--privileged": "--- Give extended privileges to this container",
    "-p|--publish": "--- Publish a container's port to the host",
    "-P|--publish-all": "--- Publish all exposed ports to random ports",
    "--pull": "--- Pull image before creating ",
    "--read-only": "--- Mount the container's root filesystem as read only",
    "--restart": "--- Restart policy to apply when a container exits ",
    "--rm": "--- Automatically remove the container when it exits",
    "--runtime": "--- Runtime to use for this container",
    "--security-opt": "--- Security Options",
    "--shm-size": "--- Size of /dev/shm",
    "--stop-signal": "--- Signal to stop a container ",
    "--stop-timeout": "--- Timeout  to stop a container",
    "--storage-opt": "--- Storage driver options for the container",
    "--sysctl": "--- Sysctl options ",
    "--tmpfs": "--- Mount a tmpfs directory",
    "-t|--tty": "--- Allocate a pseudo-TTY",
    "--ulimit": "--- Ulimit options ",
    "-u|--user": "--- Username or UID ",
    "--userns": "--- User namespace to use",
    "--uts": "--- UTS namespace to use",
    "-v|--volume": "--- Bind mount a volume",
    "--volume-driver": "--- Optional volume driver for the container",
    "--volumes-from": "--- Mount volumes from the specified container",
    "-w|--workdir": "--- Working directory inside the container",
    "#desc": "Create a new container"
  },
  "diff": {
    "#desc": "Inspect changes to files or directories on a container's filesystem"
  },
  "events": {
    "-f|--filter": "--- Filter output based on conditions provided",
    "--format": "--- Format the output using the given Go template",
    "--since": "--- Show all events created since timestamp",
    "--until": "--- Stream events until this timestamp",
    "#desc": "Get real time events from the server"
  },
  "exec": {
    "-d|--detach": "--- Detached mode: run command in the background",
    "--detach-keys": "--- Override the key sequence for detaching a container",
    "-e|--env": "--- Set environment variables",
    "--env-file": "--- Read in a file of environment variables",
    "-i|--interactive": "--- Keep STDIN open even if not attached",
    "--privileged": "--- Give extended privileges to the command",
    "-t|--tty": "--- Allocate a pseudo-TTY",
    "-u|--user": "--- Username or UID ",
    "-w|--workdir": "--- Working directory inside the container",
    "#desc": "Run a command in a running container"
  },
  "export": {
    "-o|--output": "--- Write to a file, instead of STDOUT",
    "#desc": "Export a container's filesystem as a tar archive"
  },
  "history": {
    "--format": "--- Pretty-print images using a Go template",
    "-H|--human": "--- Print sizes and dates in human readable format ",
    "--no-trunc": "--- Don't truncate output",
    "-q|--quiet": "--- Only show image IDs",
    "#desc": "Show the history of an image"
  },
  "images": {
    "-a|--all": "--- Show all images ",
    "--digests": "--- Show digests",
    "-f|--filter": "--- Filter output based on conditions provided",
    "--format": "--- Pretty-print images using a Go template",
    "--no-trunc": "--- Don't truncate output",
    "-q|--quiet": "--- Only show image IDs",
    "#desc": "List images"
  },
  "import": {
    "-c|--change": "--- Apply Dockerfile instruction to the created image",
    "-m|--message": "--- Set commit message for imported image",
    "--platform": "--- Set platform if server is multi-platform capable",
    "#desc": "Import the contents from a tarball to create a filesystem image"
  },
  "info": {
    "-f|--format": "--- Format the output using the given Go template",
    "#desc": "Display system-wide information"
  },
  "inspect": {
    "-f|--format": "--- Format the output using the given Go template",
    "-s|--size": "--- Display total file sizes if the type is container",
    "--type": "--- Return JSON for specified type",
    "#desc": "Return low-level information on Docker objects"
  },
  "kill": {
    "-s|--signal": "--- Signal to send to the container ",
    "#desc": "Kill one or more running containers"
  },
  "load": {
    "-i|--input": "--- Read from tar archive file, instead of STDIN",
    "-q|--quiet": "--- Suppress the load output",
    "#desc": "Load an image from a tar archive or STDIN"
  },
  "login": {
    "azure": {
      "--client-id": "--- Client ID for Service principal login",
      "--client-secret": "--- Client secret for Service principal login",
      "--cloud-name": "--- Name of a registered Azure cloud [AzureCloud | AzureChinaCloud | AzureGermanCloud | AzureUSGovernment] ",
      "-h|--help": "--- Help for azure",
      "--tenant-id": "--- Specify tenant ID to use",
      "#desc": "Log in to azure"
    },
    "-h|--help": "--- Help for login",
    "-p|--password": "--- Help for login",
    "--password-stdin": "--- Take the password from stdin",
    "-u|--username": "--- Take the password from stdin",
    "#desc": "Log in to a Docker registry"
  },
  "logout": {
    "azure": {
      "-h|--help": "--- Help for azure",
      "#desc": "Logout from Azure"
    },
    "-h|--help": "--- Help for logout",
    "#desc": "Log out from a Docker registry"
  },
  "logs": {
    "--details": "--- Show extra details provided to logs",
    "-f|--follow": "--- Follow log output",
    "--since": "--- Show logs since timestamp ",
    "-n|--tail": "--- Number of lines to show from the end of the logs ",
    "-t|--timestamps": "--- Show timestamps",
    "--until": "--- Show logs before a timestamp ",
    "#desc": "Fetch the logs of a container"
  },
  "pause": {
    "#desc": "Pause all processes within one or more containers"
  },
  "port": {
    "#desc": "List port mappings or a specific mapping for the container"
  },
  "ps": {
    "-a|--all": "--- Show all containers ",
    "-f|--filter": "--- Filter output based on conditions provided",
    "--format": "--- Pretty-print containers using a Go template",
    "-n|--last": "--- Show n last created containers ",
    "-l|--latest": "--- Show the latest created container ",
    "--no-trunc": "--- Don't truncate output",
    "-q|--quiet": "--- Only display container IDs",
    "-s|--size": "--- Display total file sizes",
    "#desc": "List containers"
  },
  "pull": {
    "-a|--all-tags": "--- Download all tagged images in the repository",
    "--disable-content-trust": "--- Skip image verification ",
    "--platform": "--- Set platform if server is multi-platform capable",
    "-q|--quiet": "--- Suppress verbose output",
    "#desc": "Pull an image or a repository from a registry"
  },
  "push": {
    "-a|--all-tags": "--- Push all tagged images in the repository",
    "--disable-content-trust": "--- Skip image signing ",
    "-q|--quiet": "--- Suppress verbose output",
    "#desc": "Push an image or a repository to a registry"
  },
  "rename": {
    "#desc": "Rename a container"
  },
  "restart": {
    "-t|--time": "--- Seconds to wait for stop before killing the container ",
    "#desc": "Restart one or more containers"
  },
  "rm": {
    "-f|--force": "--- Force the removal of a running container ",
    "-l|--link": "--- Remove the specified link",
    "-v|--volumes": "--- Remove anonymous volumes associated with the container",
    "#desc": "Remove one or more containers"
  },
  "rmi": {
    "-f|--force": "--- Force removal of the image",
    "--no-prune": "--- Do not delete untagged parents",
    "#desc": "Remove one or more images"
  },
  "run": {
    "--add-host": "--- Add a custom host-to-IP mapping ",
    "-a|--attach": "--- Attach to STDIN, STDOUT or STDERR",
    "--blkio-weight": "--- Block IO ",
    "--blkio-weight-device": "--- Block IO weight ",
    "--cap-add": "--- Add Linux capabilities",
    "--cap-drop": "--- Drop Linux capabilities",
    "--cgroup-parent": "--- Optional parent cgroup for the container",
    "--cgroupns": "--- Cgroup namespace to use ",
    "--cidfile": "--- Write the container ID to the file",
    "--cpu-period": "--- Limit CPU CFS  period",
    "--cpu-quota": "--- Limit CPU CFS  quota",
    "--cpu-rt-period": "--- Limit CPU real-time period in microseconds",
    "--cpu-rt-runtime": "--- Limit CPU real-time runtime in microseconds",
    "-c|--cpu-shares": "--- CPU shares ",
    "--cpus": "--- Number of CPUs",
    "--cpuset-cpus": "--- CPUs in which to allow execution ",
    "--cpuset-mems": "--- MEMs in which to allow execution ",
    "-d|--detach": "--- Run container in background and print container ID",
    "--detach-keys": "--- Override the key sequence for detaching a container",
    "--device": "--- Add a host device to the container",
    "--device-cgroup-rule": "--- Add a rule to the cgroup allowed devices list",
    "--device-read-bps": "--- Limit read rate ",
    "--device-read-iops": "--- Limit read rate ",
    "--device-write-bps": "--- Limit write rate ",
    "--device-write-iops": "--- Limit write rate ",
    "--disable-content-trust": "--- Skip image verification ",
    "--dns": "--- Set custom DNS servers",
    "--dns-option": "--- Set DNS options",
    "--dns-search": "--- Set custom DNS search domains",
    "--domainname": "--- Container NIS domain name",
    "--entrypoint": "--- Overwrite the default ENTRYPOINT of the image",
    "-e|--env": "--- Set environment variables",
    "--env-file": "--- Read in a file of environment variables",
    "--expose": "--- Expose a port or a range of ports",
    "--gpus": "--- GPU devices to add to the container ",
    "--group-add": "--- Add additional groups to join",
    "--health-cmd": "--- Command to run to check health",
    "--health-interval": "--- Time between running the check ",
    "--health-retries": "--- Consecutive failures needed to report unhealthy",
    "--health-start-period": "--- Start period for the container to initialize before starting health-retries countdown ",
    "--health-timeout": "--- Maximum time to allow one check to run ",
    "--help": "--- Print usage",
    "-h|--hostname": "--- Container host name",
    "--init": "--- Run an init inside the container that forwards signals and reaps processes",
    "-i|--interactive": "--- Keep STDIN open even if not attached",
    "--ip": "--- IPv4 address ",
    "--ip6": "--- IPv6 address ",
    "--ipc": "--- IPC mode to use",
    "--isolation": "--- Container isolation technology",
    "--kernel-memory": "--- Kernel memory limit",
    "-l|--label": "--- Set meta data on a container",
    "--label-file": "--- Read in a line delimited file of labels",
    "--link": "--- Add link to another container",
    "--link-local-ip": "--- Container IPv4/IPv6 link-local addresses",
    "--log-driver": "--- Logging driver for the container",
    "--log-opt": "--- Log driver options",
    "--mac-address": "--- Container MAC address ",
    "-m|--memory": "--- Memory limit",
    "--memory-reservation": "--- Memory soft limit",
    "--memory-swap": "--- Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
    "--memory-swappiness": "--- Tune container memory swappiness ",
    "--mount": "--- Attach a filesystem mount to the container",
    "--name": "--- Assign a name to the container",
    "--network": "--- Connect a container to a network",
    "--network-alias": "--- Add network-scoped alias for the container",
    "--no-healthcheck": "--- Disable any container-specified HEALTHCHECK",
    "--oom-kill-disable": "--- Disable OOM Killer",
    "--oom-score-adj": "--- Tune host's OOM preferences ",
    "--pid": "--- PID namespace to use",
    "--pids-limit": "--- Tune container pids limit ",
    "--platform": "--- Set platform if server is multi-platform capable",
    "--privileged": "--- Give extended privileges to this container",
    "-p|--publish": "--- Publish a container's port to the host",
    "-P|--publish-all": "--- Publish all exposed ports to random ports",
    "--pull": "--- Pull image before running ",
    "--read-only": "--- Mount the container's root filesystem as read only",
    "--restart": "--- Restart policy to apply when a container exits ",
    "--rm": "--- Automatically remove the container when it exits",
    "--runtime": "--- Runtime to use for this container",
    "--security-opt": "--- Security Options",
    "--shm-size": "--- Size of /dev/shm",
    "--sig-proxy": "--- Proxy received signals to the process ",
    "--stop-signal": "--- Signal to stop a container ",
    "--stop-timeout": "--- Timeout  to stop a container",
    "--storage-opt": "--- Storage driver options for the container",
    "--sysctl": "--- Sysctl options ",
    "--tmpfs": "--- Mount a tmpfs directory",
    "-t|--tty": "--- Allocate a pseudo-TTY",
    "--ulimit": "--- Ulimit options ",
    "-u|--user": "--- Username or UID ",
    "--userns": "--- User namespace to use",
    "--uts": "--- UTS namespace to use",
    "-v|--volume": "--- Bind mount a volume",
    "--volume-driver": "--- Optional volume driver for the container",
    "--volumes-from": "--- Mount volumes from the specified container",
    "-w|--workdir": "--- Working directory inside the container",
    "#desc": "Run a command in a new container"
  },
  "save": {
    "-o|--output": "--- Write to a file, instead of STDOUT",
    "#desc": "Save one or more images to a tar archive "
  },
  "search": {
    "-f|--filter": "--- Filter output based on conditions provided",
    "--format": "--- Pretty-print search using a Go template",
    "--limit": "--- Max number of search results ",
    "--no-trunc": "--- Don't truncate output",
    "#desc": "Search the Docker Hub for images"
  },
  "start": {
    "-a|--attach": "--- Attach STDOUT/STDERR and forward signals",
    "--detach-keys": "--- Override the key sequence for detaching a container",
    "-i|--interactive": "--- Attach container's STDIN",
    "#desc": "Start one or more stopped containers"
  },
  "stats": {
    "-a|--all": "--- Show all containers ",
    "--format": "--- Pretty-print images using a Go template",
    "--no-stream": "--- Disable streaming stats and only pull the first result",
    "--no-trunc": "--- Do not truncate output",
    "#desc": "Display a live stream of container resource usage statistics"
  },
  "stop": {
    "-t|--time": "--- Seconds to wait for stop before killing it ",
    "#desc": "Stop one or more running containers"
  },
  "tag": {
    "#desc": "Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE"
  },
  "top": {
    "#desc": "Display the running processes of a container"
  },
  "unpause": {
    "#desc": "Unpause all processes within one or more containers"
  },
  "update": {
    "--blkio-weight": "--- Block IO ",
    "--cpu-period": "--- Limit CPU CFS  period",
    "--cpu-quota": "--- Limit CPU CFS  quota",
    "--cpu-rt-period": "--- Limit the CPU real-time period in microseconds",
    "--cpu-rt-runtime": "--- Limit the CPU real-time runtime in microseconds",
    "-c|--cpu-shares": "--- CPU shares ",
    "--cpus": "--- Number of CPUs",
    "--cpuset-cpus": "--- CPUs in which to allow execution ",
    "--cpuset-mems": "--- MEMs in which to allow execution ",
    "--kernel-memory": "--- Kernel memory limit",
    "-m|--memory": "--- Memory limit",
    "--memory-reservation": "--- Memory soft limit",
    "--memory-swap": "--- Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
    "--pids-limit": "--- Tune container pids limit ",
    "--restart": "--- Restart policy to apply when a container exits",
    "#desc": "Update configuration of one or more containers"
  },
  "version": {
    "-f|--format": "--- Format the output. Values: [pretty | json]. ",
    "-h|--help": "--- Help for version",
    "--kubeconfig": "--- Kubernetes config file",
    "#desc": "Show the Docker version information"
  },
  "wait": {
    "#desc": "Block until one or more containers stop, then print their exit codes"
  }
}
